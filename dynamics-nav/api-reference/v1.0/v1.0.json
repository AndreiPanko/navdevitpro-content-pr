{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Dynamics 365 Business Central",
        "description": "Business Central Standard APIs"
    },
    "servers": [
        {
            "url": "https://api.businesscentral.dynamics.com/v1.0/api/v1.0"
        }
    ],
    "paths": {
        "/companies": {
            "get": {
                "summary": "Returns a list of companies",
                "tags": [
                    "company"
                ],
                "operationId": "getCompanies",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of companies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/company"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "systemVersion",
                                    "name",
                                    "displayName",
                                    "businessProfileId"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an company object for Dynamics 365 Business Central.",
                "tags": [
                    "company"
                ],
                "operationId": "getCompanyById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested company",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/company"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "systemVersion",
                                    "name",
                                    "displayName",
                                    "businessProfileId"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/items": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of items",
                "tags": [
                    "item"
                ],
                "operationId": "getItems",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/item"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "picture",
                                    "defaultDimensions",
                                    "itemCategory"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "type",
                                    "itemCategoryId",
                                    "itemCategoryCode",
                                    "blocked",
                                    "baseUnitOfMeasureId",
                                    "baseUnitOfMeasure",
                                    "gtin",
                                    "inventory",
                                    "unitPrice",
                                    "priceIncludesTax",
                                    "unitCost",
                                    "taxGroupId",
                                    "taxGroupCode",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a item in Dynamics 365 Business Central",
                "tags": [
                    "item"
                ],
                "operationId": "postItem",
                "requestBody": {
                    "$ref": "#/components/requestBodies/item"
                },
                "responses": {
                    "201": {
                        "description": "A new itemhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/items({item_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "item_id",
                    "in": "path",
                    "required": true,
                    "description": "id for item",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an item object for Dynamics 365 Business Central.",
                "tags": [
                    "item"
                ],
                "operationId": "getItemById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested item",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "picture",
                                    "defaultDimensions",
                                    "itemCategory"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "type",
                                    "itemCategoryId",
                                    "itemCategoryCode",
                                    "blocked",
                                    "baseUnitOfMeasureId",
                                    "baseUnitOfMeasure",
                                    "gtin",
                                    "inventory",
                                    "unitPrice",
                                    "priceIncludesTax",
                                    "unitCost",
                                    "taxGroupId",
                                    "taxGroupCode",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an item in Dynamics 365 Business Central",
                "tags": [
                    "item"
                ],
                "operationId": "deleteItemById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified item"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified item",
                "tags": [
                    "item"
                ],
                "operationId": "patchItemById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/item"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieditem",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/item"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/items({item_id})/picture": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "item_id",
                    "in": "path",
                    "required": true,
                    "description": "id for item",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of picture",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForItem",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/picture"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/items({item_id})/picture({picture_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "item_id",
                    "in": "path",
                    "required": true,
                    "description": "id for item",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "picture_id",
                    "in": "path",
                    "required": true,
                    "description": "id for picture",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForItemById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an picture in Dynamics 365 Business Central",
                "tags": [
                    "picture"
                ],
                "operationId": "deletePictureForItemByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified picture"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified picture",
                "tags": [
                    "picture"
                ],
                "operationId": "patchPictureForItemByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/picture"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpicture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/items({item_id})/defaultDimensions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "item_id",
                    "in": "path",
                    "required": true,
                    "description": "id for item",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForItem",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/defaultDimensions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "postDefaultDimensionsForItem",
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "201": {
                        "description": "A new defaultDimensionshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "item_id",
                    "in": "path",
                    "required": true,
                    "description": "id for item",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_dimensionId",
                    "in": "path",
                    "required": true,
                    "description": "dimensionId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForItemByDimensionIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "deleteDefaultDimensionsForItemByDimensionIdByParentIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified defaultDimensions"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "patchDefaultDimensionsForItemByDimensionIdByParentIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieddefaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/picture": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of picture",
                "tags": [
                    "picture"
                ],
                "operationId": "getPicture",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/picture"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/picture({picture_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "picture_id",
                    "in": "path",
                    "required": true,
                    "description": "id for picture",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an picture in Dynamics 365 Business Central",
                "tags": [
                    "picture"
                ],
                "operationId": "deletePictureById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified picture"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified picture",
                "tags": [
                    "picture"
                ],
                "operationId": "patchPictureById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/picture"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpicture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/defaultDimensions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensions",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/defaultDimensions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "postDefaultDimensions",
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "201": {
                        "description": "A new defaultDimensionshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_dimensionId",
                    "in": "path",
                    "required": true,
                    "description": "dimensionId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsByDimensionIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "deleteDefaultDimensionsByDimensionIdByParentId",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified defaultDimensions"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "patchDefaultDimensionsByDimensionIdByParentId",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieddefaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customers": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customers",
                "tags": [
                    "customer"
                ],
                "operationId": "getCustomers",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerFinancialDetails",
                                    "picture",
                                    "defaultDimensions",
                                    "currency",
                                    "paymentTerm",
                                    "shipmentMethod",
                                    "paymentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "type",
                                    "address",
                                    "phoneNumber",
                                    "email",
                                    "website",
                                    "taxLiable",
                                    "taxAreaId",
                                    "taxAreaDisplayName",
                                    "taxRegistrationNumber",
                                    "currencyId",
                                    "currencyCode",
                                    "paymentTermsId",
                                    "shipmentMethodId",
                                    "paymentMethodId",
                                    "blocked",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a customer in Dynamics 365 Business Central",
                "tags": [
                    "customer"
                ],
                "operationId": "postCustomer",
                "requestBody": {
                    "$ref": "#/components/requestBodies/customer"
                },
                "responses": {
                    "201": {
                        "description": "A new customerhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customers({customer_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customer object for Dynamics 365 Business Central.",
                "tags": [
                    "customer"
                ],
                "operationId": "getCustomerById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customer"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerFinancialDetails",
                                    "picture",
                                    "defaultDimensions",
                                    "currency",
                                    "paymentTerm",
                                    "shipmentMethod",
                                    "paymentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "type",
                                    "address",
                                    "phoneNumber",
                                    "email",
                                    "website",
                                    "taxLiable",
                                    "taxAreaId",
                                    "taxAreaDisplayName",
                                    "taxRegistrationNumber",
                                    "currencyId",
                                    "currencyCode",
                                    "paymentTermsId",
                                    "shipmentMethodId",
                                    "paymentMethodId",
                                    "blocked",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an customer in Dynamics 365 Business Central",
                "tags": [
                    "customer"
                ],
                "operationId": "deleteCustomerById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified customer"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified customer",
                "tags": [
                    "customer"
                ],
                "operationId": "patchCustomerById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/customer"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcustomer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customers({customer_id})/customerFinancialDetails": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customerFinancialDetails",
                "tags": [
                    "customerFinancialDetail"
                ],
                "operationId": "getCustomerFinancialDetailsForCustomer",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customerFinancialDetails",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customerFinancialDetail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "balance",
                                    "totalSalesExcludingTax",
                                    "overdueAmount"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/customers({customer_id})/customerFinancialDetails({customerFinancialDetail_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerFinancialDetail_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerFinancialDetail",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customerFinancialDetail object for Dynamics 365 Business Central.",
                "tags": [
                    "customerFinancialDetail"
                ],
                "operationId": "getCustomerFinancialDetailForCustomerById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customerFinancialDetail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerFinancialDetail"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "balance",
                                    "totalSalesExcludingTax",
                                    "overdueAmount"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/customers({customer_id})/picture": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of picture",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForCustomer",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/picture"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/customers({customer_id})/picture({picture_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "picture_id",
                    "in": "path",
                    "required": true,
                    "description": "id for picture",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForCustomerById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an picture in Dynamics 365 Business Central",
                "tags": [
                    "picture"
                ],
                "operationId": "deletePictureForCustomerByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified picture"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified picture",
                "tags": [
                    "picture"
                ],
                "operationId": "patchPictureForCustomerByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/picture"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpicture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customers({customer_id})/defaultDimensions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForCustomer",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/defaultDimensions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "postDefaultDimensionsForCustomer",
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "201": {
                        "description": "A new defaultDimensionshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customer_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customer",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_dimensionId",
                    "in": "path",
                    "required": true,
                    "description": "dimensionId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForCustomerByDimensionIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "deleteDefaultDimensionsForCustomerByDimensionIdByParentIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified defaultDimensions"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "patchDefaultDimensionsForCustomerByDimensionIdByParentIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieddefaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerFinancialDetails": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customerFinancialDetails",
                "tags": [
                    "customerFinancialDetail"
                ],
                "operationId": "getCustomerFinancialDetails",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customerFinancialDetails",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customerFinancialDetail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "balance",
                                    "totalSalesExcludingTax",
                                    "overdueAmount"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/customerFinancialDetails({customerFinancialDetail_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerFinancialDetail_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerFinancialDetail",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customerFinancialDetail object for Dynamics 365 Business Central.",
                "tags": [
                    "customerFinancialDetail"
                ],
                "operationId": "getCustomerFinancialDetailById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customerFinancialDetail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerFinancialDetail"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "balance",
                                    "totalSalesExcludingTax",
                                    "overdueAmount"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/vendors": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of vendors",
                "tags": [
                    "vendor"
                ],
                "operationId": "getVendors",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of vendors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/vendor"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "picture",
                                    "defaultDimensions",
                                    "currency",
                                    "paymentTerm",
                                    "paymentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "address",
                                    "phoneNumber",
                                    "email",
                                    "website",
                                    "taxRegistrationNumber",
                                    "currencyId",
                                    "currencyCode",
                                    "irs1099Code",
                                    "paymentTermsId",
                                    "paymentMethodId",
                                    "taxLiable",
                                    "blocked",
                                    "balance",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a vendor in Dynamics 365 Business Central",
                "tags": [
                    "vendor"
                ],
                "operationId": "postVendor",
                "requestBody": {
                    "$ref": "#/components/requestBodies/vendor"
                },
                "responses": {
                    "201": {
                        "description": "A new vendorhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vendor"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/vendors({vendor_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendor_id",
                    "in": "path",
                    "required": true,
                    "description": "id for vendor",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an vendor object for Dynamics 365 Business Central.",
                "tags": [
                    "vendor"
                ],
                "operationId": "getVendorById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested vendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vendor"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "picture",
                                    "defaultDimensions",
                                    "currency",
                                    "paymentTerm",
                                    "paymentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "address",
                                    "phoneNumber",
                                    "email",
                                    "website",
                                    "taxRegistrationNumber",
                                    "currencyId",
                                    "currencyCode",
                                    "irs1099Code",
                                    "paymentTermsId",
                                    "paymentMethodId",
                                    "taxLiable",
                                    "blocked",
                                    "balance",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an vendor in Dynamics 365 Business Central",
                "tags": [
                    "vendor"
                ],
                "operationId": "deleteVendorById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified vendor"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified vendor",
                "tags": [
                    "vendor"
                ],
                "operationId": "patchVendorById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/vendor"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedvendor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vendor"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/vendors({vendor_id})/picture": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendor_id",
                    "in": "path",
                    "required": true,
                    "description": "id for vendor",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of picture",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForVendor",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/picture"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/vendors({vendor_id})/picture({picture_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendor_id",
                    "in": "path",
                    "required": true,
                    "description": "id for vendor",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "picture_id",
                    "in": "path",
                    "required": true,
                    "description": "id for picture",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForVendorById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an picture in Dynamics 365 Business Central",
                "tags": [
                    "picture"
                ],
                "operationId": "deletePictureForVendorByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified picture"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified picture",
                "tags": [
                    "picture"
                ],
                "operationId": "patchPictureForVendorByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/picture"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpicture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/vendors({vendor_id})/defaultDimensions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendor_id",
                    "in": "path",
                    "required": true,
                    "description": "id for vendor",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForVendor",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/defaultDimensions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "postDefaultDimensionsForVendor",
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "201": {
                        "description": "A new defaultDimensionshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendor_id",
                    "in": "path",
                    "required": true,
                    "description": "id for vendor",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_dimensionId",
                    "in": "path",
                    "required": true,
                    "description": "dimensionId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForVendorByDimensionIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "deleteDefaultDimensionsForVendorByDimensionIdByParentIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified defaultDimensions"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "patchDefaultDimensionsForVendorByDimensionIdByParentIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieddefaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/companyInformation": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of companyInformation",
                "tags": [
                    "companyInformation"
                ],
                "operationId": "getCompanyInformation",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of companyInformation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/companyInformation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "displayName",
                                    "address",
                                    "phoneNumber",
                                    "faxNumber",
                                    "email",
                                    "website",
                                    "taxRegistrationNumber",
                                    "currencyCode",
                                    "currentFiscalYearStartDate",
                                    "industry",
                                    "picture",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/companyInformation({companyInformation_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "companyInformation_id",
                    "in": "path",
                    "required": true,
                    "description": "id for companyInformation",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an companyInformation object for Dynamics 365 Business Central.",
                "tags": [
                    "companyInformation"
                ],
                "operationId": "getCompanyInformationById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested companyInformation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/companyInformation"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "displayName",
                                    "address",
                                    "phoneNumber",
                                    "faxNumber",
                                    "email",
                                    "website",
                                    "taxRegistrationNumber",
                                    "currencyCode",
                                    "currentFiscalYearStartDate",
                                    "industry",
                                    "picture",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "patch": {
                "summary": "Lets the user patch the specified companyInformation",
                "tags": [
                    "companyInformation"
                ],
                "operationId": "patchCompanyInformationById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/companyInformation"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcompanyInformation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/companyInformation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesInvoices",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "getSalesInvoices",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesInvoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesInvoice"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesInvoiceLines",
                                    "pdfDocument",
                                    "customer",
                                    "currency",
                                    "paymentTerm",
                                    "shipmentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "invoiceDate",
                                    "dueDate",
                                    "customerPurchaseOrderReference",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "shippingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "orderId",
                                    "orderNumber",
                                    "paymentTermsId",
                                    "shipmentMethodId",
                                    "salesperson",
                                    "pricesIncludeTax",
                                    "remainingAmount",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "lastModifiedDateTime",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesInvoice in Dynamics 365 Business Central",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "postSalesInvoice",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesInvoice"
                },
                "responses": {
                    "201": {
                        "description": "A new salesInvoicehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesInvoice object for Dynamics 365 Business Central.",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "getSalesInvoiceById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesInvoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoice"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesInvoiceLines",
                                    "pdfDocument",
                                    "customer",
                                    "currency",
                                    "paymentTerm",
                                    "shipmentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "invoiceDate",
                                    "dueDate",
                                    "customerPurchaseOrderReference",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "shippingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "orderId",
                                    "orderNumber",
                                    "paymentTermsId",
                                    "shipmentMethodId",
                                    "salesperson",
                                    "pricesIncludeTax",
                                    "remainingAmount",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "lastModifiedDateTime",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesInvoice in Dynamics 365 Business Central",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "deleteSalesInvoiceById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesInvoice"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesInvoice",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "patchSalesInvoiceById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesInvoice"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesInvoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.cancelAndSend": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the cancelAndSend action for salesInvoices entity",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "cancelAndSendActionSalesInvoices",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a cancelAndSend action on the salesInvoices entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.cancel": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the cancel action for salesInvoices entity",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "cancelActionSalesInvoices",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a cancel action on the salesInvoices entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.postAndSend": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the postAndSend action for salesInvoices entity",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "postAndSendActionSalesInvoices",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a postAndSend action on the salesInvoices entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.post": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the post action for salesInvoices entity",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "postActionSalesInvoices",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a post action on the salesInvoices entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.send": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the send action for salesInvoices entity",
                "tags": [
                    "salesInvoice"
                ],
                "operationId": "sendActionSalesInvoices",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a send action on the salesInvoices entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesInvoiceLines",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "getSalesInvoiceLinesForSalesInvoice",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesInvoiceLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesInvoiceLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "postSalesInvoiceLineForSalesInvoice",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesInvoiceLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesInvoiceLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines('{salesInvoiceLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoiceLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoiceLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesInvoiceLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "getSalesInvoiceLineForSalesInvoiceById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoiceLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "deleteSalesInvoiceLineForSalesInvoiceByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesInvoiceLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesInvoiceLine",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "patchSalesInvoiceLineForSalesInvoiceByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesInvoiceLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/pdfDocument": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of pdfDocument",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForSalesInvoice",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/pdfDocument"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/salesInvoices({salesInvoice_id})/pdfDocument({pdfDocument_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "pdfDocument_id",
                    "in": "path",
                    "required": true,
                    "description": "id for pdfDocument",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForSalesInvoiceById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pdfDocument"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/salesInvoiceLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesInvoiceLines",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "getSalesInvoiceLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesInvoiceLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesInvoiceLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "postSalesInvoiceLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesInvoiceLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesInvoiceLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesInvoiceLines('{salesInvoiceLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesInvoiceLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesInvoiceLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesInvoiceLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "getSalesInvoiceLineById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoiceLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "deleteSalesInvoiceLineById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesInvoiceLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesInvoiceLine",
                "tags": [
                    "salesInvoiceLine"
                ],
                "operationId": "patchSalesInvoiceLineById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesInvoiceLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/pdfDocument": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of pdfDocument",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocument",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/pdfDocument"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/pdfDocument({pdfDocument_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "pdfDocument_id",
                    "in": "path",
                    "required": true,
                    "description": "id for pdfDocument",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pdfDocument"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/customerPaymentJournals": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customerPaymentJournals",
                "tags": [
                    "customerPaymentJournal"
                ],
                "operationId": "getCustomerPaymentJournals",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customerPaymentJournals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customerPaymentJournal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerPayments",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime",
                                    "balancingAccountId",
                                    "balancingAccountNumber"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a customerPaymentJournal in Dynamics 365 Business Central",
                "tags": [
                    "customerPaymentJournal"
                ],
                "operationId": "postCustomerPaymentJournal",
                "requestBody": {
                    "$ref": "#/components/requestBodies/customerPaymentJournal"
                },
                "responses": {
                    "201": {
                        "description": "A new customerPaymentJournalhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPaymentJournal"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerPaymentJournal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerPaymentJournal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customerPaymentJournal object for Dynamics 365 Business Central.",
                "tags": [
                    "customerPaymentJournal"
                ],
                "operationId": "getCustomerPaymentJournalById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customerPaymentJournal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPaymentJournal"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerPayments",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime",
                                    "balancingAccountId",
                                    "balancingAccountNumber"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an customerPaymentJournal in Dynamics 365 Business Central",
                "tags": [
                    "customerPaymentJournal"
                ],
                "operationId": "deleteCustomerPaymentJournalById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified customerPaymentJournal"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified customerPaymentJournal",
                "tags": [
                    "customerPaymentJournal"
                ],
                "operationId": "patchCustomerPaymentJournalById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/customerPaymentJournal"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcustomerPaymentJournal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPaymentJournal"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})/customerPayments": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerPaymentJournal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerPaymentJournal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customerPayments",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "getCustomerPaymentsForCustomerPaymentJournal",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customerPayments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customerPayment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customer"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "customerId",
                                    "customerNumber",
                                    "contactId",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "appliesToInvoiceId",
                                    "appliesToInvoiceNumber",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a customerPayment in Dynamics 365 Business Central",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "postCustomerPaymentForCustomerPaymentJournal",
                "requestBody": {
                    "$ref": "#/components/requestBodies/customerPayment"
                },
                "responses": {
                    "201": {
                        "description": "A new customerPaymenthas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPayment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})/customerPayments({customerPayment_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerPaymentJournal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerPaymentJournal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerPayment_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerPayment",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customerPayment object for Dynamics 365 Business Central.",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "getCustomerPaymentForCustomerPaymentJournalById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customerPayment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPayment"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customer"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "customerId",
                                    "customerNumber",
                                    "contactId",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "appliesToInvoiceId",
                                    "appliesToInvoiceNumber",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an customerPayment in Dynamics 365 Business Central",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "deleteCustomerPaymentForCustomerPaymentJournalByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified customerPayment"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified customerPayment",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "patchCustomerPaymentForCustomerPaymentJournalByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/customerPayment"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcustomerPayment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPayment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerPayments": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customerPayments",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "getCustomerPayments",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customerPayments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customerPayment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customer"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "customerId",
                                    "customerNumber",
                                    "contactId",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "appliesToInvoiceId",
                                    "appliesToInvoiceNumber",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a customerPayment in Dynamics 365 Business Central",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "postCustomerPayment",
                "requestBody": {
                    "$ref": "#/components/requestBodies/customerPayment"
                },
                "responses": {
                    "201": {
                        "description": "A new customerPaymenthas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPayment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerPayments({customerPayment_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerPayment_id",
                    "in": "path",
                    "required": true,
                    "description": "id for customerPayment",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customerPayment object for Dynamics 365 Business Central.",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "getCustomerPaymentById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customerPayment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPayment"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customer"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "customerId",
                                    "customerNumber",
                                    "contactId",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "appliesToInvoiceId",
                                    "appliesToInvoiceNumber",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an customerPayment in Dynamics 365 Business Central",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "deleteCustomerPaymentById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified customerPayment"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified customerPayment",
                "tags": [
                    "customerPayment"
                ],
                "operationId": "patchCustomerPaymentById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/customerPayment"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcustomerPayment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerPayment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/accounts": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of accounts",
                "tags": [
                    "account"
                ],
                "operationId": "getAccounts",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of accounts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/account"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "category",
                                    "subCategory",
                                    "blocked",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/accounts({account_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "account_id",
                    "in": "path",
                    "required": true,
                    "description": "id for account",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an account object for Dynamics 365 Business Central.",
                "tags": [
                    "account"
                ],
                "operationId": "getAccountById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested account",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/account"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "category",
                                    "subCategory",
                                    "blocked",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/taxGroups": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of taxGroups",
                "tags": [
                    "taxGroup"
                ],
                "operationId": "getTaxGroups",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of taxGroups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/taxGroup"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "taxType",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a taxGroup in Dynamics 365 Business Central",
                "tags": [
                    "taxGroup"
                ],
                "operationId": "postTaxGroup",
                "requestBody": {
                    "$ref": "#/components/requestBodies/taxGroup"
                },
                "responses": {
                    "201": {
                        "description": "A new taxGrouphas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/taxGroup"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/taxGroups({taxGroup_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "taxGroup_id",
                    "in": "path",
                    "required": true,
                    "description": "id for taxGroup",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an taxGroup object for Dynamics 365 Business Central.",
                "tags": [
                    "taxGroup"
                ],
                "operationId": "getTaxGroupById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested taxGroup",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/taxGroup"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "taxType",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an taxGroup in Dynamics 365 Business Central",
                "tags": [
                    "taxGroup"
                ],
                "operationId": "deleteTaxGroupById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified taxGroup"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified taxGroup",
                "tags": [
                    "taxGroup"
                ],
                "operationId": "patchTaxGroupById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/taxGroup"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedtaxGroup",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/taxGroup"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journals": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of journals",
                "tags": [
                    "journal"
                ],
                "operationId": "getJournals",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of journals",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/journal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "journalLines",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime",
                                    "balancingAccountId",
                                    "balancingAccountNumber"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a journal in Dynamics 365 Business Central",
                "tags": [
                    "journal"
                ],
                "operationId": "postJournal",
                "requestBody": {
                    "$ref": "#/components/requestBodies/journal"
                },
                "responses": {
                    "201": {
                        "description": "A new journalhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journal"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journals({journal_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an journal object for Dynamics 365 Business Central.",
                "tags": [
                    "journal"
                ],
                "operationId": "getJournalById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested journal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journal"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "journalLines",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime",
                                    "balancingAccountId",
                                    "balancingAccountNumber"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an journal in Dynamics 365 Business Central",
                "tags": [
                    "journal"
                ],
                "operationId": "deleteJournalById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified journal"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified journal",
                "tags": [
                    "journal"
                ],
                "operationId": "patchJournalById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/journal"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedjournal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journal"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journals({journal_id})/Microsoft.NAV.post": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the post action for journals entity",
                "tags": [
                    "journal"
                ],
                "operationId": "postActionJournals",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a post action on the journals entity"
                    }
                }
            }
        },
        "/companies({company_id})/journals({journal_id})/journalLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of journalLines",
                "tags": [
                    "journalLine"
                ],
                "operationId": "getJournalLinesForJournal",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of journalLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/journalLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "attachments",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "accountId",
                                    "accountNumber",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a journalLine in Dynamics 365 Business Central",
                "tags": [
                    "journalLine"
                ],
                "operationId": "postJournalLineForJournal",
                "requestBody": {
                    "$ref": "#/components/requestBodies/journalLine"
                },
                "responses": {
                    "201": {
                        "description": "A new journalLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journalLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journalLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journalLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an journalLine object for Dynamics 365 Business Central.",
                "tags": [
                    "journalLine"
                ],
                "operationId": "getJournalLineForJournalById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested journalLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journalLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "attachments",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "accountId",
                                    "accountNumber",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an journalLine in Dynamics 365 Business Central",
                "tags": [
                    "journalLine"
                ],
                "operationId": "deleteJournalLineForJournalByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified journalLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified journalLine",
                "tags": [
                    "journalLine"
                ],
                "operationId": "patchJournalLineForJournalByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/journalLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedjournalLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journalLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})/attachments": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journalLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journalLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of attachments",
                "tags": [
                    "attachments"
                ],
                "operationId": "getAttachmentsForJournalLineForJournal",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of attachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachments"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a attachments in Dynamics 365 Business Central",
                "tags": [
                    "attachments"
                ],
                "operationId": "postAttachmentsForJournalLineForJournal",
                "requestBody": {
                    "$ref": "#/components/requestBodies/attachments"
                },
                "responses": {
                    "201": {
                        "description": "A new attachmentshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})/attachments({attachments_parentId},{attachments_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journal_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journal",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journalLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journalLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "attachments_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for attachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "attachments_id",
                    "in": "path",
                    "required": true,
                    "description": "id for attachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an attachments object for Dynamics 365 Business Central.",
                "tags": [
                    "attachments"
                ],
                "operationId": "getAttachmentsForJournalLineForJournalByIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested attachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an attachments in Dynamics 365 Business Central",
                "tags": [
                    "attachments"
                ],
                "operationId": "deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified attachments"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified attachments",
                "tags": [
                    "attachments"
                ],
                "operationId": "patchAttachmentsForJournalLineForJournalByIdByParentIdByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/attachments"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedattachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journalLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of journalLines",
                "tags": [
                    "journalLine"
                ],
                "operationId": "getJournalLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of journalLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/journalLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "attachments",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "accountId",
                                    "accountNumber",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a journalLine in Dynamics 365 Business Central",
                "tags": [
                    "journalLine"
                ],
                "operationId": "postJournalLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/journalLine"
                },
                "responses": {
                    "201": {
                        "description": "A new journalLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journalLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journalLines({journalLine_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journalLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journalLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an journalLine object for Dynamics 365 Business Central.",
                "tags": [
                    "journalLine"
                ],
                "operationId": "getJournalLineById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested journalLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journalLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "attachments",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "journalDisplayName",
                                    "lineNumber",
                                    "accountId",
                                    "accountNumber",
                                    "postingDate",
                                    "documentNumber",
                                    "externalDocumentNumber",
                                    "amount",
                                    "description",
                                    "comment",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an journalLine in Dynamics 365 Business Central",
                "tags": [
                    "journalLine"
                ],
                "operationId": "deleteJournalLineById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified journalLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified journalLine",
                "tags": [
                    "journalLine"
                ],
                "operationId": "patchJournalLineById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/journalLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedjournalLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/journalLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journalLines({journalLine_id})/attachments": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journalLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journalLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of attachments",
                "tags": [
                    "attachments"
                ],
                "operationId": "getAttachmentsForJournalLine",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of attachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachments"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a attachments in Dynamics 365 Business Central",
                "tags": [
                    "attachments"
                ],
                "operationId": "postAttachmentsForJournalLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/attachments"
                },
                "responses": {
                    "201": {
                        "description": "A new attachmentshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/journalLines({journalLine_id})/attachments({attachments_parentId},{attachments_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "journalLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for journalLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "attachments_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for attachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "attachments_id",
                    "in": "path",
                    "required": true,
                    "description": "id for attachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an attachments object for Dynamics 365 Business Central.",
                "tags": [
                    "attachments"
                ],
                "operationId": "getAttachmentsForJournalLineByIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested attachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an attachments in Dynamics 365 Business Central",
                "tags": [
                    "attachments"
                ],
                "operationId": "deleteAttachmentsForJournalLineByIdByParentIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified attachments"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified attachments",
                "tags": [
                    "attachments"
                ],
                "operationId": "patchAttachmentsForJournalLineByIdByParentIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/attachments"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedattachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/attachments": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of attachments",
                "tags": [
                    "attachments"
                ],
                "operationId": "getAttachments",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of attachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attachments"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a attachments in Dynamics 365 Business Central",
                "tags": [
                    "attachments"
                ],
                "operationId": "postAttachments",
                "requestBody": {
                    "$ref": "#/components/requestBodies/attachments"
                },
                "responses": {
                    "201": {
                        "description": "A new attachmentshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/attachments({attachments_parentId},{attachments_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "attachments_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for attachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "attachments_id",
                    "in": "path",
                    "required": true,
                    "description": "id for attachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an attachments object for Dynamics 365 Business Central.",
                "tags": [
                    "attachments"
                ],
                "operationId": "getAttachmentsByIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested attachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an attachments in Dynamics 365 Business Central",
                "tags": [
                    "attachments"
                ],
                "operationId": "deleteAttachmentsByIdByParentId",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified attachments"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified attachments",
                "tags": [
                    "attachments"
                ],
                "operationId": "patchAttachmentsByIdByParentId",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/attachments"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedattachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of employees",
                "tags": [
                    "employee"
                ],
                "operationId": "getEmployees",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/employee"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "picture",
                                    "defaultDimensions",
                                    "timeRegistrationEntries"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "givenName",
                                    "middleName",
                                    "surname",
                                    "jobTitle",
                                    "address",
                                    "phoneNumber",
                                    "mobilePhone",
                                    "email",
                                    "personalEmail",
                                    "employmentDate",
                                    "terminationDate",
                                    "status",
                                    "birthDate",
                                    "statisticsGroupCode",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a employee in Dynamics 365 Business Central",
                "tags": [
                    "employee"
                ],
                "operationId": "postEmployee",
                "requestBody": {
                    "$ref": "#/components/requestBodies/employee"
                },
                "responses": {
                    "201": {
                        "description": "A new employeehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/employee"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees({employee_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an employee object for Dynamics 365 Business Central.",
                "tags": [
                    "employee"
                ],
                "operationId": "getEmployeeById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested employee",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/employee"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "picture",
                                    "defaultDimensions",
                                    "timeRegistrationEntries"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "displayName",
                                    "givenName",
                                    "middleName",
                                    "surname",
                                    "jobTitle",
                                    "address",
                                    "phoneNumber",
                                    "mobilePhone",
                                    "email",
                                    "personalEmail",
                                    "employmentDate",
                                    "terminationDate",
                                    "status",
                                    "birthDate",
                                    "statisticsGroupCode",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an employee in Dynamics 365 Business Central",
                "tags": [
                    "employee"
                ],
                "operationId": "deleteEmployeeById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified employee"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified employee",
                "tags": [
                    "employee"
                ],
                "operationId": "patchEmployeeById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/employee"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedemployee",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/employee"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees({employee_id})/picture": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of picture",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForEmployee",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/picture"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/employees({employee_id})/picture({picture_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "picture_id",
                    "in": "path",
                    "required": true,
                    "description": "id for picture",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
                "tags": [
                    "picture"
                ],
                "operationId": "getPictureForEmployeeById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested picture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "width",
                                    "height",
                                    "contentType",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an picture in Dynamics 365 Business Central",
                "tags": [
                    "picture"
                ],
                "operationId": "deletePictureForEmployeeByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified picture"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified picture",
                "tags": [
                    "picture"
                ],
                "operationId": "patchPictureForEmployeeByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/picture"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpicture",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/picture"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees({employee_id})/defaultDimensions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForEmployee",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/defaultDimensions"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "postDefaultDimensionsForEmployee",
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "201": {
                        "description": "A new defaultDimensionshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "defaultDimensions_dimensionId",
                    "in": "path",
                    "required": true,
                    "description": "dimensionId for defaultDimensions",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "getDefaultDimensionsForEmployeeByDimensionIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested defaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account",
                                    "dimension",
                                    "dimensionValue"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "dimensionId",
                                    "dimensionCode",
                                    "dimensionValueId",
                                    "dimensionValueCode",
                                    "postingValidation"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified defaultDimensions"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified defaultDimensions",
                "tags": [
                    "defaultDimensions"
                ],
                "operationId": "patchDefaultDimensionsForEmployeeByDimensionIdByParentIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/defaultDimensions"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieddefaultDimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/defaultDimensions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees({employee_id})/timeRegistrationEntries": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of timeRegistrationEntries",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "getTimeRegistrationEntriesForEmployee",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of timeRegistrationEntries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/timeRegistrationEntry"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "employeeId",
                                    "employeeNumber",
                                    "lineNumber",
                                    "date",
                                    "quantity",
                                    "status",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "lastModfiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a timeRegistrationEntry in Dynamics 365 Business Central",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "postTimeRegistrationEntryForEmployee",
                "requestBody": {
                    "$ref": "#/components/requestBodies/timeRegistrationEntry"
                },
                "responses": {
                    "201": {
                        "description": "A new timeRegistrationEntryhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRegistrationEntry"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/employees({employee_id})/timeRegistrationEntries({timeRegistrationEntry_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "employee_id",
                    "in": "path",
                    "required": true,
                    "description": "id for employee",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "timeRegistrationEntry_id",
                    "in": "path",
                    "required": true,
                    "description": "id for timeRegistrationEntry",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an timeRegistrationEntry object for Dynamics 365 Business Central.",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "getTimeRegistrationEntryForEmployeeById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested timeRegistrationEntry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRegistrationEntry"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "employeeId",
                                    "employeeNumber",
                                    "lineNumber",
                                    "date",
                                    "quantity",
                                    "status",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "lastModfiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an timeRegistrationEntry in Dynamics 365 Business Central",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "deleteTimeRegistrationEntryForEmployeeByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified timeRegistrationEntry"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified timeRegistrationEntry",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "patchTimeRegistrationEntryForEmployeeByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/timeRegistrationEntry"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedtimeRegistrationEntry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRegistrationEntry"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/timeRegistrationEntries": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of timeRegistrationEntries",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "getTimeRegistrationEntries",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of timeRegistrationEntries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/timeRegistrationEntry"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "employeeId",
                                    "employeeNumber",
                                    "lineNumber",
                                    "date",
                                    "quantity",
                                    "status",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "lastModfiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a timeRegistrationEntry in Dynamics 365 Business Central",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "postTimeRegistrationEntry",
                "requestBody": {
                    "$ref": "#/components/requestBodies/timeRegistrationEntry"
                },
                "responses": {
                    "201": {
                        "description": "A new timeRegistrationEntryhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRegistrationEntry"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/timeRegistrationEntries({timeRegistrationEntry_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "timeRegistrationEntry_id",
                    "in": "path",
                    "required": true,
                    "description": "id for timeRegistrationEntry",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an timeRegistrationEntry object for Dynamics 365 Business Central.",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "getTimeRegistrationEntryById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested timeRegistrationEntry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRegistrationEntry"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "employeeId",
                                    "employeeNumber",
                                    "lineNumber",
                                    "date",
                                    "quantity",
                                    "status",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "lastModfiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an timeRegistrationEntry in Dynamics 365 Business Central",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "deleteTimeRegistrationEntryById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified timeRegistrationEntry"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified timeRegistrationEntry",
                "tags": [
                    "timeRegistrationEntry"
                ],
                "operationId": "patchTimeRegistrationEntryById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/timeRegistrationEntry"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedtimeRegistrationEntry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRegistrationEntry"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/generalLedgerEntries": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of generalLedgerEntries",
                "tags": [
                    "generalLedgerEntry"
                ],
                "operationId": "getGeneralLedgerEntries",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of generalLedgerEntries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/generalLedgerEntry"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "postingDate",
                                    "documentNumber",
                                    "documentType",
                                    "accountId",
                                    "accountNumber",
                                    "description",
                                    "debitAmount",
                                    "creditAmount",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/generalLedgerEntries({generalLedgerEntry_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "generalLedgerEntry_id",
                    "in": "path",
                    "required": true,
                    "description": "id for generalLedgerEntry",
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an generalLedgerEntry object for Dynamics 365 Business Central.",
                "tags": [
                    "generalLedgerEntry"
                ],
                "operationId": "getGeneralLedgerEntryById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested generalLedgerEntry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/generalLedgerEntry"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "postingDate",
                                    "documentNumber",
                                    "documentType",
                                    "accountId",
                                    "accountNumber",
                                    "description",
                                    "debitAmount",
                                    "creditAmount",
                                    "dimensions",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/currencies": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of currencies",
                "tags": [
                    "currency"
                ],
                "operationId": "getCurrencies",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of currencies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/currency"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "symbol",
                                    "amountDecimalPlaces",
                                    "amountRoundingPrecision",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a currency in Dynamics 365 Business Central",
                "tags": [
                    "currency"
                ],
                "operationId": "postCurrency",
                "requestBody": {
                    "$ref": "#/components/requestBodies/currency"
                },
                "responses": {
                    "201": {
                        "description": "A new currencyhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/currency"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/currencies({currency_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "currency_id",
                    "in": "path",
                    "required": true,
                    "description": "id for currency",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an currency object for Dynamics 365 Business Central.",
                "tags": [
                    "currency"
                ],
                "operationId": "getCurrencyById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested currency",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/currency"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "symbol",
                                    "amountDecimalPlaces",
                                    "amountRoundingPrecision",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an currency in Dynamics 365 Business Central",
                "tags": [
                    "currency"
                ],
                "operationId": "deleteCurrencyById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified currency"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified currency",
                "tags": [
                    "currency"
                ],
                "operationId": "patchCurrencyById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/currency"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcurrency",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/currency"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/paymentMethods": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of paymentMethods",
                "tags": [
                    "paymentMethod"
                ],
                "operationId": "getPaymentMethods",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of paymentMethods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/paymentMethod"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a paymentMethod in Dynamics 365 Business Central",
                "tags": [
                    "paymentMethod"
                ],
                "operationId": "postPaymentMethod",
                "requestBody": {
                    "$ref": "#/components/requestBodies/paymentMethod"
                },
                "responses": {
                    "201": {
                        "description": "A new paymentMethodhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/paymentMethods({paymentMethod_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "paymentMethod_id",
                    "in": "path",
                    "required": true,
                    "description": "id for paymentMethod",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an paymentMethod object for Dynamics 365 Business Central.",
                "tags": [
                    "paymentMethod"
                ],
                "operationId": "getPaymentMethodById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested paymentMethod",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentMethod"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an paymentMethod in Dynamics 365 Business Central",
                "tags": [
                    "paymentMethod"
                ],
                "operationId": "deletePaymentMethodById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified paymentMethod"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified paymentMethod",
                "tags": [
                    "paymentMethod"
                ],
                "operationId": "patchPaymentMethodById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/paymentMethod"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpaymentMethod",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/dimensions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of dimensions",
                "tags": [
                    "dimension"
                ],
                "operationId": "getDimensions",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of dimensions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/dimension"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "dimensionValues"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/dimensions({dimension_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimension_id",
                    "in": "path",
                    "required": true,
                    "description": "id for dimension",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an dimension object for Dynamics 365 Business Central.",
                "tags": [
                    "dimension"
                ],
                "operationId": "getDimensionById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested dimension",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dimension"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "dimensionValues"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/dimensions({dimension_id})/dimensionValues": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimension_id",
                    "in": "path",
                    "required": true,
                    "description": "id for dimension",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of dimensionValues",
                "tags": [
                    "dimensionValue"
                ],
                "operationId": "getDimensionValuesForDimension",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of dimensionValues",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/dimensionValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/dimensions({dimension_id})/dimensionValues({dimensionValue_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimension_id",
                    "in": "path",
                    "required": true,
                    "description": "id for dimension",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimensionValue_id",
                    "in": "path",
                    "required": true,
                    "description": "id for dimensionValue",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an dimensionValue object for Dynamics 365 Business Central.",
                "tags": [
                    "dimensionValue"
                ],
                "operationId": "getDimensionValueForDimensionById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested dimensionValue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dimensionValue"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/dimensionValues": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of dimensionValues",
                "tags": [
                    "dimensionValue"
                ],
                "operationId": "getDimensionValues",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of dimensionValues",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/dimensionValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/dimensionValues({dimensionValue_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimensionValue_id",
                    "in": "path",
                    "required": true,
                    "description": "id for dimensionValue",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an dimensionValue object for Dynamics 365 Business Central.",
                "tags": [
                    "dimensionValue"
                ],
                "operationId": "getDimensionValueById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested dimensionValue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dimensionValue"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/dimensionLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of dimensionLines",
                "tags": [
                    "dimensionLine"
                ],
                "operationId": "getDimensionLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of dimensionLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/dimensionLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "dimension"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "code",
                                    "displayName",
                                    "valueId",
                                    "valueCode",
                                    "valueDisplayName"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a dimensionLine in Dynamics 365 Business Central",
                "tags": [
                    "dimensionLine"
                ],
                "operationId": "postDimensionLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/dimensionLine"
                },
                "responses": {
                    "201": {
                        "description": "A new dimensionLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dimensionLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/dimensionLines({dimensionLine_parentId},{dimensionLine_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimensionLine_parentId",
                    "in": "path",
                    "required": true,
                    "description": "parentId for dimensionLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "dimensionLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for dimensionLine",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an dimensionLine object for Dynamics 365 Business Central.",
                "tags": [
                    "dimensionLine"
                ],
                "operationId": "getDimensionLineByIdByParentId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested dimensionLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dimensionLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "dimension"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "parentId",
                                    "id",
                                    "code",
                                    "displayName",
                                    "valueId",
                                    "valueCode",
                                    "valueDisplayName"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an dimensionLine in Dynamics 365 Business Central",
                "tags": [
                    "dimensionLine"
                ],
                "operationId": "deleteDimensionLineByIdByParentId",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified dimensionLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified dimensionLine",
                "tags": [
                    "dimensionLine"
                ],
                "operationId": "patchDimensionLineByIdByParentId",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/dimensionLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieddimensionLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dimensionLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/paymentTerms": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of paymentTerms",
                "tags": [
                    "paymentTerm"
                ],
                "operationId": "getPaymentTerms",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of paymentTerms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/paymentTerm"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "dueDateCalculation",
                                    "discountDateCalculation",
                                    "discountPercent",
                                    "calculateDiscountOnCreditMemos",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a paymentTerm in Dynamics 365 Business Central",
                "tags": [
                    "paymentTerm"
                ],
                "operationId": "postPaymentTerm",
                "requestBody": {
                    "$ref": "#/components/requestBodies/paymentTerm"
                },
                "responses": {
                    "201": {
                        "description": "A new paymentTermhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentTerm"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/paymentTerms({paymentTerm_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "paymentTerm_id",
                    "in": "path",
                    "required": true,
                    "description": "id for paymentTerm",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an paymentTerm object for Dynamics 365 Business Central.",
                "tags": [
                    "paymentTerm"
                ],
                "operationId": "getPaymentTermById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested paymentTerm",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentTerm"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "dueDateCalculation",
                                    "discountDateCalculation",
                                    "discountPercent",
                                    "calculateDiscountOnCreditMemos",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an paymentTerm in Dynamics 365 Business Central",
                "tags": [
                    "paymentTerm"
                ],
                "operationId": "deletePaymentTermById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified paymentTerm"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified paymentTerm",
                "tags": [
                    "paymentTerm"
                ],
                "operationId": "patchPaymentTermById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/paymentTerm"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpaymentTerm",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentTerm"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/shipmentMethods": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of shipmentMethods",
                "tags": [
                    "shipmentMethod"
                ],
                "operationId": "getShipmentMethods",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of shipmentMethods",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipmentMethod"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a shipmentMethod in Dynamics 365 Business Central",
                "tags": [
                    "shipmentMethod"
                ],
                "operationId": "postShipmentMethod",
                "requestBody": {
                    "$ref": "#/components/requestBodies/shipmentMethod"
                },
                "responses": {
                    "201": {
                        "description": "A new shipmentMethodhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/shipmentMethods({shipmentMethod_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "shipmentMethod_id",
                    "in": "path",
                    "required": true,
                    "description": "id for shipmentMethod",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an shipmentMethod object for Dynamics 365 Business Central.",
                "tags": [
                    "shipmentMethod"
                ],
                "operationId": "getShipmentMethodById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested shipmentMethod",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentMethod"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an shipmentMethod in Dynamics 365 Business Central",
                "tags": [
                    "shipmentMethod"
                ],
                "operationId": "deleteShipmentMethodById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified shipmentMethod"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified shipmentMethod",
                "tags": [
                    "shipmentMethod"
                ],
                "operationId": "patchShipmentMethodById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/shipmentMethod"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedshipmentMethod",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/itemCategories": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of itemCategories",
                "tags": [
                    "itemCategory"
                ],
                "operationId": "getItemCategories",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of itemCategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/itemCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a itemCategory in Dynamics 365 Business Central",
                "tags": [
                    "itemCategory"
                ],
                "operationId": "postItemCategory",
                "requestBody": {
                    "$ref": "#/components/requestBodies/itemCategory"
                },
                "responses": {
                    "201": {
                        "description": "A new itemCategoryhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemCategory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/itemCategories({itemCategory_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "itemCategory_id",
                    "in": "path",
                    "required": true,
                    "description": "id for itemCategory",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an itemCategory object for Dynamics 365 Business Central.",
                "tags": [
                    "itemCategory"
                ],
                "operationId": "getItemCategoryById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested itemCategory",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemCategory"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an itemCategory in Dynamics 365 Business Central",
                "tags": [
                    "itemCategory"
                ],
                "operationId": "deleteItemCategoryById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified itemCategory"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified itemCategory",
                "tags": [
                    "itemCategory"
                ],
                "operationId": "patchItemCategoryById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/itemCategory"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifieditemCategory",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemCategory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/cashFlowStatement": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of cashFlowStatement",
                "tags": [
                    "cashFlowStatement"
                ],
                "operationId": "getCashFlowStatement",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of cashFlowStatement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/cashFlowStatement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "netChange",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/cashFlowStatement({cashFlowStatement_lineNumber})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "cashFlowStatement_lineNumber",
                    "in": "path",
                    "required": true,
                    "description": "lineNumber for cashFlowStatement",
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an cashFlowStatement object for Dynamics 365 Business Central.",
                "tags": [
                    "cashFlowStatement"
                ],
                "operationId": "getCashFlowStatementByLineNumber",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested cashFlowStatement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cashFlowStatement"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "netChange",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/countriesRegions": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of countriesRegions",
                "tags": [
                    "countryRegion"
                ],
                "operationId": "getCountriesRegions",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of countriesRegions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/countryRegion"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "addressFormat",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a countryRegion in Dynamics 365 Business Central",
                "tags": [
                    "countryRegion"
                ],
                "operationId": "postCountryRegion",
                "requestBody": {
                    "$ref": "#/components/requestBodies/countryRegion"
                },
                "responses": {
                    "201": {
                        "description": "A new countryRegionhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/countryRegion"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/countriesRegions({countryRegion_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "countryRegion_id",
                    "in": "path",
                    "required": true,
                    "description": "id for countryRegion",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an countryRegion object for Dynamics 365 Business Central.",
                "tags": [
                    "countryRegion"
                ],
                "operationId": "getCountryRegionById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested countryRegion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/countryRegion"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "addressFormat",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an countryRegion in Dynamics 365 Business Central",
                "tags": [
                    "countryRegion"
                ],
                "operationId": "deleteCountryRegionById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified countryRegion"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified countryRegion",
                "tags": [
                    "countryRegion"
                ],
                "operationId": "patchCountryRegionById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/countryRegion"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedcountryRegion",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/countryRegion"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesOrders": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesOrders",
                "tags": [
                    "salesOrder"
                ],
                "operationId": "getSalesOrders",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesOrders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesOrder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesOrderLines",
                                    "customer",
                                    "currency",
                                    "paymentTerm"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "orderDate",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "shippingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "pricesIncludeTax",
                                    "paymentTermsId",
                                    "salesperson",
                                    "partialShipping",
                                    "requestedDeliveryDate",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "fullyShipped",
                                    "status",
                                    "lastModifiedDateTime",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesOrder in Dynamics 365 Business Central",
                "tags": [
                    "salesOrder"
                ],
                "operationId": "postSalesOrder",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesOrder"
                },
                "responses": {
                    "201": {
                        "description": "A new salesOrderhas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesOrders({salesOrder_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesOrder_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesOrder",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesOrder object for Dynamics 365 Business Central.",
                "tags": [
                    "salesOrder"
                ],
                "operationId": "getSalesOrderById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesOrder",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrder"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesOrderLines",
                                    "customer",
                                    "currency",
                                    "paymentTerm"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "orderDate",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "shippingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "pricesIncludeTax",
                                    "paymentTermsId",
                                    "salesperson",
                                    "partialShipping",
                                    "requestedDeliveryDate",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "fullyShipped",
                                    "status",
                                    "lastModifiedDateTime",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesOrder in Dynamics 365 Business Central",
                "tags": [
                    "salesOrder"
                ],
                "operationId": "deleteSalesOrderById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesOrder"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesOrder",
                "tags": [
                    "salesOrder"
                ],
                "operationId": "patchSalesOrderById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesOrder"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesOrder",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesOrders({salesOrder_id})/salesOrderLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesOrder_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesOrder",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesOrderLines",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "getSalesOrderLinesForSalesOrder",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesOrderLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesOrderLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "quantity",
                                    "unitPrice",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate",
                                    "shippedQuantity",
                                    "invoicedQuantity",
                                    "invoiceQuantity",
                                    "shipQuantity"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesOrderLine in Dynamics 365 Business Central",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "postSalesOrderLineForSalesOrder",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesOrderLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesOrderLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrderLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesOrders({salesOrder_id})/salesOrderLines('{salesOrderLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesOrder_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesOrder",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesOrderLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesOrderLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesOrderLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "getSalesOrderLineForSalesOrderById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesOrderLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrderLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "quantity",
                                    "unitPrice",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate",
                                    "shippedQuantity",
                                    "invoicedQuantity",
                                    "invoiceQuantity",
                                    "shipQuantity"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesOrderLine in Dynamics 365 Business Central",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "deleteSalesOrderLineForSalesOrderByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesOrderLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesOrderLine",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "patchSalesOrderLineForSalesOrderByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesOrderLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesOrderLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrderLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesOrderLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesOrderLines",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "getSalesOrderLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesOrderLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesOrderLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "quantity",
                                    "unitPrice",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate",
                                    "shippedQuantity",
                                    "invoicedQuantity",
                                    "invoiceQuantity",
                                    "shipQuantity"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesOrderLine in Dynamics 365 Business Central",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "postSalesOrderLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesOrderLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesOrderLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrderLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesOrderLines('{salesOrderLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesOrderLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesOrderLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesOrderLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "getSalesOrderLineById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesOrderLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrderLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "quantity",
                                    "unitPrice",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate",
                                    "shippedQuantity",
                                    "invoicedQuantity",
                                    "invoiceQuantity",
                                    "shipQuantity"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesOrderLine in Dynamics 365 Business Central",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "deleteSalesOrderLineById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesOrderLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesOrderLine",
                "tags": [
                    "salesOrderLine"
                ],
                "operationId": "patchSalesOrderLineById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesOrderLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesOrderLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrderLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/retainedEarningsStatement": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of retainedEarningsStatement",
                "tags": [
                    "retainedEarningsStatement"
                ],
                "operationId": "getRetainedEarningsStatement",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of retainedEarningsStatement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/retainedEarningsStatement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "netChange",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/retainedEarningsStatement({retainedEarningsStatement_lineNumber})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "retainedEarningsStatement_lineNumber",
                    "in": "path",
                    "required": true,
                    "description": "lineNumber for retainedEarningsStatement",
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an retainedEarningsStatement object for Dynamics 365 Business Central.",
                "tags": [
                    "retainedEarningsStatement"
                ],
                "operationId": "getRetainedEarningsStatementByLineNumber",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested retainedEarningsStatement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/retainedEarningsStatement"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "netChange",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/unitsOfMeasure": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of unitsOfMeasure",
                "tags": [
                    "unitOfMeasure"
                ],
                "operationId": "getUnitsOfMeasure",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of unitsOfMeasure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/unitOfMeasure"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "internationalStandardCode",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a unitOfMeasure in Dynamics 365 Business Central",
                "tags": [
                    "unitOfMeasure"
                ],
                "operationId": "postUnitOfMeasure",
                "requestBody": {
                    "$ref": "#/components/requestBodies/unitOfMeasure"
                },
                "responses": {
                    "201": {
                        "description": "A new unitOfMeasurehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unitOfMeasure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/unitsOfMeasure({unitOfMeasure_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "unitOfMeasure_id",
                    "in": "path",
                    "required": true,
                    "description": "id for unitOfMeasure",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an unitOfMeasure object for Dynamics 365 Business Central.",
                "tags": [
                    "unitOfMeasure"
                ],
                "operationId": "getUnitOfMeasureById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested unitOfMeasure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unitOfMeasure"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "internationalStandardCode",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an unitOfMeasure in Dynamics 365 Business Central",
                "tags": [
                    "unitOfMeasure"
                ],
                "operationId": "deleteUnitOfMeasureById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified unitOfMeasure"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified unitOfMeasure",
                "tags": [
                    "unitOfMeasure"
                ],
                "operationId": "patchUnitOfMeasureById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/unitOfMeasure"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedunitOfMeasure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unitOfMeasure"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/agedAccountsReceivable": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of agedAccountsReceivable",
                "tags": [
                    "agedAccountsReceivable"
                ],
                "operationId": "getAgedAccountsReceivable",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of agedAccountsReceivable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/agedAccountsReceivable"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerId",
                                    "customerNumber",
                                    "name",
                                    "currencyCode",
                                    "balanceDue",
                                    "currentAmount",
                                    "period1Amount",
                                    "period2Amount",
                                    "period3Amount",
                                    "agedAsOfDate",
                                    "periodLengthFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/agedAccountsReceivable({agedAccountsReceivable_customerId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "agedAccountsReceivable_customerId",
                    "in": "path",
                    "required": true,
                    "description": "customerId for agedAccountsReceivable",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an agedAccountsReceivable object for Dynamics 365 Business Central.",
                "tags": [
                    "agedAccountsReceivable"
                ],
                "operationId": "getAgedAccountsReceivableByCustomerId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested agedAccountsReceivable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/agedAccountsReceivable"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerId",
                                    "customerNumber",
                                    "name",
                                    "currencyCode",
                                    "balanceDue",
                                    "currentAmount",
                                    "period1Amount",
                                    "period2Amount",
                                    "period3Amount",
                                    "agedAsOfDate",
                                    "periodLengthFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/agedAccountsPayable": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of agedAccountsPayable",
                "tags": [
                    "agedAccountsPayable"
                ],
                "operationId": "getAgedAccountsPayable",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of agedAccountsPayable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/agedAccountsPayable"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "vendorId",
                                    "vendorNumber",
                                    "name",
                                    "currencyCode",
                                    "balanceDue",
                                    "currentAmount",
                                    "period1Amount",
                                    "period2Amount",
                                    "period3Amount",
                                    "agedAsOfDate",
                                    "periodLengthFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/agedAccountsPayable({agedAccountsPayable_vendorId})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "agedAccountsPayable_vendorId",
                    "in": "path",
                    "required": true,
                    "description": "vendorId for agedAccountsPayable",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an agedAccountsPayable object for Dynamics 365 Business Central.",
                "tags": [
                    "agedAccountsPayable"
                ],
                "operationId": "getAgedAccountsPayableByVendorId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested agedAccountsPayable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/agedAccountsPayable"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "vendorId",
                                    "vendorNumber",
                                    "name",
                                    "currencyCode",
                                    "balanceDue",
                                    "currentAmount",
                                    "period1Amount",
                                    "period2Amount",
                                    "period3Amount",
                                    "agedAsOfDate",
                                    "periodLengthFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/balanceSheet": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of balanceSheet",
                "tags": [
                    "balanceSheet"
                ],
                "operationId": "getBalanceSheet",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of balanceSheet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/balanceSheet"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "balance",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/balanceSheet({balanceSheet_lineNumber})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "balanceSheet_lineNumber",
                    "in": "path",
                    "required": true,
                    "description": "lineNumber for balanceSheet",
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an balanceSheet object for Dynamics 365 Business Central.",
                "tags": [
                    "balanceSheet"
                ],
                "operationId": "getBalanceSheetByLineNumber",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested balanceSheet",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/balanceSheet"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "balance",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/trialBalance": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of trialBalance",
                "tags": [
                    "trialBalance"
                ],
                "operationId": "getTrialBalance",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of trialBalance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/trialBalance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "number",
                                    "accountId",
                                    "accountType",
                                    "display",
                                    "totalDebit",
                                    "totalCredit",
                                    "balanceAtDateDebit",
                                    "balanceAtDateCredit",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/trialBalance('{trialBalance_number}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "trialBalance_number",
                    "in": "path",
                    "required": true,
                    "description": "number for trialBalance",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an trialBalance object for Dynamics 365 Business Central.",
                "tags": [
                    "trialBalance"
                ],
                "operationId": "getTrialBalanceByNumber",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested trialBalance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/trialBalance"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "number",
                                    "accountId",
                                    "accountType",
                                    "display",
                                    "totalDebit",
                                    "totalCredit",
                                    "balanceAtDateDebit",
                                    "balanceAtDateCredit",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/incomeStatement": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of incomeStatement",
                "tags": [
                    "incomeStatement"
                ],
                "operationId": "getIncomeStatement",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of incomeStatement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/incomeStatement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "netChange",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/incomeStatement({incomeStatement_lineNumber})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "incomeStatement_lineNumber",
                    "in": "path",
                    "required": true,
                    "description": "lineNumber for incomeStatement",
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an incomeStatement object for Dynamics 365 Business Central.",
                "tags": [
                    "incomeStatement"
                ],
                "operationId": "getIncomeStatementByLineNumber",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested incomeStatement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/incomeStatement"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "lineNumber",
                                    "display",
                                    "netChange",
                                    "lineType",
                                    "indentation",
                                    "dateFilter"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/taxAreas": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of taxAreas",
                "tags": [
                    "taxArea"
                ],
                "operationId": "getTaxAreas",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of taxAreas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/taxArea"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "taxType",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a taxArea in Dynamics 365 Business Central",
                "tags": [
                    "taxArea"
                ],
                "operationId": "postTaxArea",
                "requestBody": {
                    "$ref": "#/components/requestBodies/taxArea"
                },
                "responses": {
                    "201": {
                        "description": "A new taxAreahas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/taxArea"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/taxAreas({taxArea_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "taxArea_id",
                    "in": "path",
                    "required": true,
                    "description": "id for taxArea",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an taxArea object for Dynamics 365 Business Central.",
                "tags": [
                    "taxArea"
                ],
                "operationId": "getTaxAreaById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested taxArea",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/taxArea"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "code",
                                    "displayName",
                                    "taxType",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an taxArea in Dynamics 365 Business Central",
                "tags": [
                    "taxArea"
                ],
                "operationId": "deleteTaxAreaById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified taxArea"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified taxArea",
                "tags": [
                    "taxArea"
                ],
                "operationId": "patchTaxAreaById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/taxArea"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedtaxArea",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/taxArea"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesQuotes",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "getSalesQuotes",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesQuotes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesQuote"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesQuoteLines",
                                    "pdfDocument",
                                    "customer",
                                    "currency",
                                    "paymentTerm",
                                    "shipmentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "documentDate",
                                    "dueDate",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "shippingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "paymentTermsId",
                                    "shipmentMethodId",
                                    "salesperson",
                                    "discountAmount",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "sentDate",
                                    "validUntilDate",
                                    "acceptedDate",
                                    "lastModifiedDateTime",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesQuote in Dynamics 365 Business Central",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "postSalesQuote",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesQuote"
                },
                "responses": {
                    "201": {
                        "description": "A new salesQuotehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuote"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesQuote object for Dynamics 365 Business Central.",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "getSalesQuoteById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesQuote",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuote"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesQuoteLines",
                                    "pdfDocument",
                                    "customer",
                                    "currency",
                                    "paymentTerm",
                                    "shipmentMethod"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "documentDate",
                                    "dueDate",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "shippingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "paymentTermsId",
                                    "shipmentMethodId",
                                    "salesperson",
                                    "discountAmount",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "sentDate",
                                    "validUntilDate",
                                    "acceptedDate",
                                    "lastModifiedDateTime",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesQuote in Dynamics 365 Business Central",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "deleteSalesQuoteById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesQuote"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesQuote",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "patchSalesQuoteById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesQuote"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesQuote",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuote"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})/Microsoft.NAV.makeInvoice": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the makeInvoice action for salesQuotes entity",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "makeInvoiceActionSalesQuotes",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a makeInvoice action on the salesQuotes entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})/Microsoft.NAV.send": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the send action for salesQuotes entity",
                "tags": [
                    "salesQuote"
                ],
                "operationId": "sendActionSalesQuotes",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a send action on the salesQuotes entity"
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})/salesQuoteLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesQuoteLines",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "getSalesQuoteLinesForSalesQuote",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesQuoteLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesQuoteLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesQuoteLine in Dynamics 365 Business Central",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "postSalesQuoteLineForSalesQuote",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesQuoteLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesQuoteLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuoteLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})/salesQuoteLines('{salesQuoteLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuoteLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuoteLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesQuoteLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "getSalesQuoteLineForSalesQuoteById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesQuoteLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuoteLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesQuoteLine in Dynamics 365 Business Central",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "deleteSalesQuoteLineForSalesQuoteByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesQuoteLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesQuoteLine",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "patchSalesQuoteLineForSalesQuoteByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesQuoteLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesQuoteLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuoteLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})/pdfDocument": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of pdfDocument",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForSalesQuote",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/pdfDocument"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/salesQuotes({salesQuote_id})/pdfDocument({pdfDocument_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuote_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuote",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "pdfDocument_id",
                    "in": "path",
                    "required": true,
                    "description": "id for pdfDocument",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForSalesQuoteById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pdfDocument"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/salesQuoteLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesQuoteLines",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "getSalesQuoteLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesQuoteLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesQuoteLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesQuoteLine in Dynamics 365 Business Central",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "postSalesQuoteLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesQuoteLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesQuoteLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuoteLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesQuoteLines('{salesQuoteLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesQuoteLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesQuoteLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesQuoteLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "getSalesQuoteLineById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesQuoteLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuoteLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesQuoteLine in Dynamics 365 Business Central",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "deleteSalesQuoteLineById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesQuoteLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesQuoteLine",
                "tags": [
                    "salesQuoteLine"
                ],
                "operationId": "patchSalesQuoteLineById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesQuoteLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesQuoteLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesQuoteLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesCreditMemos": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesCreditMemos",
                "tags": [
                    "salesCreditMemo"
                ],
                "operationId": "getSalesCreditMemos",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesCreditMemos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesCreditMemo"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesCreditMemoLines",
                                    "pdfDocument",
                                    "customer",
                                    "currency",
                                    "paymentTerm"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "creditMemoDate",
                                    "dueDate",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "paymentTermsId",
                                    "salesperson",
                                    "pricesIncludeTax",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "lastModifiedDateTime",
                                    "invoiceId",
                                    "invoiceNumber",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesCreditMemo in Dynamics 365 Business Central",
                "tags": [
                    "salesCreditMemo"
                ],
                "operationId": "postSalesCreditMemo",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesCreditMemo"
                },
                "responses": {
                    "201": {
                        "description": "A new salesCreditMemohas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemo_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemo",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesCreditMemo object for Dynamics 365 Business Central.",
                "tags": [
                    "salesCreditMemo"
                ],
                "operationId": "getSalesCreditMemoById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesCreditMemo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemo"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "salesCreditMemoLines",
                                    "pdfDocument",
                                    "customer",
                                    "currency",
                                    "paymentTerm"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "externalDocumentNumber",
                                    "creditMemoDate",
                                    "dueDate",
                                    "customerId",
                                    "contactId",
                                    "customerNumber",
                                    "customerName",
                                    "billToName",
                                    "billToCustomerId",
                                    "billToCustomerNumber",
                                    "sellingPostalAddress",
                                    "billingPostalAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "paymentTermsId",
                                    "salesperson",
                                    "pricesIncludeTax",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "lastModifiedDateTime",
                                    "invoiceId",
                                    "invoiceNumber",
                                    "phoneNumber",
                                    "email"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesCreditMemo in Dynamics 365 Business Central",
                "tags": [
                    "salesCreditMemo"
                ],
                "operationId": "deleteSalesCreditMemoById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesCreditMemo"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesCreditMemo",
                "tags": [
                    "salesCreditMemo"
                ],
                "operationId": "patchSalesCreditMemoById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesCreditMemo"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesCreditMemo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemo"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/salesCreditMemoLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemo_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemo",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesCreditMemoLines",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "getSalesCreditMemoLinesForSalesCreditMemo",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesCreditMemoLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesCreditMemoLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesCreditMemoLine in Dynamics 365 Business Central",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "postSalesCreditMemoLineForSalesCreditMemo",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesCreditMemoLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesCreditMemoLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemoLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/salesCreditMemoLines('{salesCreditMemoLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemo_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemo",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemoLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemoLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesCreditMemoLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "getSalesCreditMemoLineForSalesCreditMemoById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesCreditMemoLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemoLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesCreditMemoLine in Dynamics 365 Business Central",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "deleteSalesCreditMemoLineForSalesCreditMemoByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesCreditMemoLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesCreditMemoLine",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "patchSalesCreditMemoLineForSalesCreditMemoByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesCreditMemoLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesCreditMemoLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemoLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/pdfDocument": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemo_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemo",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of pdfDocument",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForSalesCreditMemo",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/pdfDocument"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/pdfDocument({pdfDocument_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemo_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemo",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "pdfDocument_id",
                    "in": "path",
                    "required": true,
                    "description": "id for pdfDocument",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForSalesCreditMemoById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pdfDocument"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/salesCreditMemoLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of salesCreditMemoLines",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "getSalesCreditMemoLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of salesCreditMemoLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesCreditMemoLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a salesCreditMemoLine in Dynamics 365 Business Central",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "postSalesCreditMemoLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesCreditMemoLine"
                },
                "responses": {
                    "201": {
                        "description": "A new salesCreditMemoLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemoLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/salesCreditMemoLines('{salesCreditMemoLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "salesCreditMemoLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for salesCreditMemoLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an salesCreditMemoLine object for Dynamics 365 Business Central.",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "getSalesCreditMemoLineById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested salesCreditMemoLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemoLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasureId",
                                    "unitOfMeasure",
                                    "unitPrice",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "shipmentDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an salesCreditMemoLine in Dynamics 365 Business Central",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "deleteSalesCreditMemoLineById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified salesCreditMemoLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified salesCreditMemoLine",
                "tags": [
                    "salesCreditMemoLine"
                ],
                "operationId": "patchSalesCreditMemoLineById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/salesCreditMemoLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedsalesCreditMemoLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesCreditMemoLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/generalLedgerEntryAttachments": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of generalLedgerEntryAttachments",
                "tags": [
                    "generalLedgerEntryAttachments"
                ],
                "operationId": "getGeneralLedgerEntryAttachments",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of generalLedgerEntryAttachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/generalLedgerEntryAttachments"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "generalLedgerEntry"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "generalLedgerEntryNumber",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "createdDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a generalLedgerEntryAttachments in Dynamics 365 Business Central",
                "tags": [
                    "generalLedgerEntryAttachments"
                ],
                "operationId": "postGeneralLedgerEntryAttachments",
                "requestBody": {
                    "$ref": "#/components/requestBodies/generalLedgerEntryAttachments"
                },
                "responses": {
                    "201": {
                        "description": "A new generalLedgerEntryAttachmentshas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/generalLedgerEntryAttachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/generalLedgerEntryAttachments({generalLedgerEntryAttachments_generalLedgerEntryNumber},{generalLedgerEntryAttachments_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "generalLedgerEntryAttachments_generalLedgerEntryNumber",
                    "in": "path",
                    "required": true,
                    "description": "generalLedgerEntryNumber for generalLedgerEntryAttachments",
                    "schema": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                {
                    "name": "generalLedgerEntryAttachments_id",
                    "in": "path",
                    "required": true,
                    "description": "id for generalLedgerEntryAttachments",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an generalLedgerEntryAttachments object for Dynamics 365 Business Central.",
                "tags": [
                    "generalLedgerEntryAttachments"
                ],
                "operationId": "getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested generalLedgerEntryAttachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/generalLedgerEntryAttachments"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "generalLedgerEntry"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "generalLedgerEntryNumber",
                                    "id",
                                    "fileName",
                                    "byteSize",
                                    "content",
                                    "createdDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an generalLedgerEntryAttachments in Dynamics 365 Business Central",
                "tags": [
                    "generalLedgerEntryAttachments"
                ],
                "operationId": "deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified generalLedgerEntryAttachments"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified generalLedgerEntryAttachments",
                "tags": [
                    "generalLedgerEntryAttachments"
                ],
                "operationId": "patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/generalLedgerEntryAttachments"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedgeneralLedgerEntryAttachments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/generalLedgerEntryAttachments"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoices": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of purchaseInvoices",
                "tags": [
                    "purchaseInvoice"
                ],
                "operationId": "getPurchaseInvoices",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of purchaseInvoices",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/purchaseInvoice"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "purchaseInvoiceLines",
                                    "pdfDocument",
                                    "vendor",
                                    "currency"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "invoiceDate",
                                    "dueDate",
                                    "vendorInvoiceNumber",
                                    "vendorId",
                                    "vendorNumber",
                                    "vendorName",
                                    "payToName",
                                    "payToContact",
                                    "payToVendorId",
                                    "payToVendorNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "buyFromAddress",
                                    "payToAddress",
                                    "shipToAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "pricesIncludeTax",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a purchaseInvoice in Dynamics 365 Business Central",
                "tags": [
                    "purchaseInvoice"
                ],
                "operationId": "postPurchaseInvoice",
                "requestBody": {
                    "$ref": "#/components/requestBodies/purchaseInvoice"
                },
                "responses": {
                    "201": {
                        "description": "A new purchaseInvoicehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an purchaseInvoice object for Dynamics 365 Business Central.",
                "tags": [
                    "purchaseInvoice"
                ],
                "operationId": "getPurchaseInvoiceById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested purchaseInvoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoice"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "purchaseInvoiceLines",
                                    "pdfDocument",
                                    "vendor",
                                    "currency"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "number",
                                    "invoiceDate",
                                    "dueDate",
                                    "vendorInvoiceNumber",
                                    "vendorId",
                                    "vendorNumber",
                                    "vendorName",
                                    "payToName",
                                    "payToContact",
                                    "payToVendorId",
                                    "payToVendorNumber",
                                    "shipToName",
                                    "shipToContact",
                                    "buyFromAddress",
                                    "payToAddress",
                                    "shipToAddress",
                                    "currencyId",
                                    "currencyCode",
                                    "pricesIncludeTax",
                                    "discountAmount",
                                    "discountAppliedBeforeTax",
                                    "totalAmountExcludingTax",
                                    "totalTaxAmount",
                                    "totalAmountIncludingTax",
                                    "status",
                                    "lastModifiedDateTime"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an purchaseInvoice in Dynamics 365 Business Central",
                "tags": [
                    "purchaseInvoice"
                ],
                "operationId": "deletePurchaseInvoiceById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified purchaseInvoice"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified purchaseInvoice",
                "tags": [
                    "purchaseInvoice"
                ],
                "operationId": "patchPurchaseInvoiceById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/purchaseInvoice"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpurchaseInvoice",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/Microsoft.NAV.post": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "post": {
                "summary": "Performs the post action for purchaseInvoices entity",
                "tags": [
                    "purchaseInvoice"
                ],
                "operationId": "postActionPurchaseInvoices",
                "responses": {
                    "204": {
                        "description": "Succesfully performed a post action on the purchaseInvoices entity"
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/purchaseInvoiceLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of purchaseInvoiceLines",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "getPurchaseInvoiceLinesForPurchaseInvoice",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of purchaseInvoiceLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/purchaseInvoiceLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasure",
                                    "unitCost",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "expectedReceiptDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a purchaseInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "postPurchaseInvoiceLineForPurchaseInvoice",
                "requestBody": {
                    "$ref": "#/components/requestBodies/purchaseInvoiceLine"
                },
                "responses": {
                    "201": {
                        "description": "A new purchaseInvoiceLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/purchaseInvoiceLines('{purchaseInvoiceLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoiceLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoiceLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an purchaseInvoiceLine object for Dynamics 365 Business Central.",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "getPurchaseInvoiceLineForPurchaseInvoiceById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested purchaseInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoiceLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasure",
                                    "unitCost",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "expectedReceiptDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an purchaseInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "deletePurchaseInvoiceLineForPurchaseInvoiceByIdById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified purchaseInvoiceLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified purchaseInvoiceLine",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "patchPurchaseInvoiceLineForPurchaseInvoiceByIdById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/purchaseInvoiceLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpurchaseInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/pdfDocument": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of pdfDocument",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForPurchaseInvoice",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/pdfDocument"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/pdfDocument({pdfDocument_id})": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoice_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoice",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "pdfDocument_id",
                    "in": "path",
                    "required": true,
                    "description": "id for pdfDocument",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
                "tags": [
                    "pdfDocument"
                ],
                "operationId": "getPdfDocumentForPurchaseInvoiceById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested pdfDocument",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/pdfDocument"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "content"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/purchaseInvoiceLines": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of purchaseInvoiceLines",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "getPurchaseInvoiceLines",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of purchaseInvoiceLines",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/purchaseInvoiceLine"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasure",
                                    "unitCost",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "expectedReceiptDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "post": {
                "summary": "Creates a purchaseInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "postPurchaseInvoiceLine",
                "requestBody": {
                    "$ref": "#/components/requestBodies/purchaseInvoiceLine"
                },
                "responses": {
                    "201": {
                        "description": "A new purchaseInvoiceLinehas been succesfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/purchaseInvoiceLines('{purchaseInvoiceLine_id}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "purchaseInvoiceLine_id",
                    "in": "path",
                    "required": true,
                    "description": "id for purchaseInvoiceLine",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an purchaseInvoiceLine object for Dynamics 365 Business Central.",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "getPurchaseInvoiceLineById",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested purchaseInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoiceLine"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Entities to expand",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "item",
                                    "account"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "id",
                                    "documentId",
                                    "sequence",
                                    "itemId",
                                    "accountId",
                                    "lineType",
                                    "lineDetails",
                                    "description",
                                    "unitOfMeasure",
                                    "unitCost",
                                    "quantity",
                                    "discountAmount",
                                    "discountPercent",
                                    "discountAppliedBeforeTax",
                                    "amountExcludingTax",
                                    "taxCode",
                                    "taxPercent",
                                    "totalTaxAmount",
                                    "amountIncludingTax",
                                    "invoiceDiscountAllocation",
                                    "netAmount",
                                    "netTaxAmount",
                                    "netAmountIncludingTax",
                                    "expectedReceiptDate"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            },
            "delete": {
                "summary": "Delete an purchaseInvoiceLine in Dynamics 365 Business Central",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "deletePurchaseInvoiceLineById",
                "responses": {
                    "204": {
                        "description": "Succesfully deleted the specified purchaseInvoiceLine"
                    }
                }
            },
            "patch": {
                "summary": "Lets the user patch the specified purchaseInvoiceLine",
                "tags": [
                    "purchaseInvoiceLine"
                ],
                "operationId": "patchPurchaseInvoiceLineById",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/IfMatchParam"
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/purchaseInvoiceLine"
                },
                "responses": {
                    "200": {
                        "description": "Succesfully updated the specifiedpurchaseInvoiceLine",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoiceLine"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companies({company_id})/customerSales": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of customerSales",
                "tags": [
                    "customerSale"
                ],
                "operationId": "getCustomerSales",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of customerSales",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customerSale"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerId",
                                    "customerNumber",
                                    "name",
                                    "totalSalesAmount",
                                    "dateFilter_FilterOnly"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/customerSales({customerSale_customerId},'{customerSale_customerNumber}','{customerSale_name}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerSale_customerId",
                    "in": "path",
                    "required": true,
                    "description": "customerId for customerSale",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "customerSale_customerNumber",
                    "in": "path",
                    "required": true,
                    "description": "customerNumber for customerSale",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "customerSale_name",
                    "in": "path",
                    "required": true,
                    "description": "name for customerSale",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an customerSale object for Dynamics 365 Business Central.",
                "tags": [
                    "customerSale"
                ],
                "operationId": "getCustomerSaleByNameByCustomerNumberByCustomerId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested customerSale",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customerSale"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "customerId",
                                    "customerNumber",
                                    "name",
                                    "totalSalesAmount",
                                    "dateFilter_FilterOnly"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/vendorPurchases": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            ],
            "get": {
                "summary": "Returns a list of vendorPurchases",
                "tags": [
                    "vendorPurchase"
                ],
                "operationId": "getVendorPurchases",
                "responses": {
                    "200": {
                        "description": "Succesfully returned a list of vendorPurchases",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/vendorPurchase"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/topParam"
                    },
                    {
                        "$ref": "#/components/parameters/skipParam"
                    },
                    {
                        "$ref": "#/components/parameters/limitParam"
                    },
                    {
                        "$ref": "#/components/parameters/filterParam"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "vendorId",
                                    "vendorNumber",
                                    "name",
                                    "totalPurchaseAmount",
                                    "dateFilter_FilterOnly"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        },
        "/companies({company_id})/vendorPurchases({vendorPurchase_vendorId},'{vendorPurchase_vendorNumber}','{vendorPurchase_name}')": {
            "parameters": [
                {
                    "name": "company_id",
                    "in": "path",
                    "required": true,
                    "description": "id for company",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendorPurchase_vendorId",
                    "in": "path",
                    "required": true,
                    "description": "vendorId for vendorPurchase",
                    "schema": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                {
                    "name": "vendorPurchase_vendorNumber",
                    "in": "path",
                    "required": true,
                    "description": "vendorNumber for vendorPurchase",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "vendorPurchase_name",
                    "in": "path",
                    "required": true,
                    "description": "name for vendorPurchase",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Retrieve the properties and relationships of an vendorPurchase object for Dynamics 365 Business Central.",
                "tags": [
                    "vendorPurchase"
                ],
                "operationId": "getVendorPurchaseByNameByVendorNumberByVendorId",
                "responses": {
                    "200": {
                        "description": "Succesfully returned the requested vendorPurchase",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/vendorPurchase"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Selected properties to be retrieved",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "vendorId",
                                    "vendorNumber",
                                    "name",
                                    "totalPurchaseAmount",
                                    "dateFilter_FilterOnly"
                                ]
                            }
                        },
                        "style": "form",
                        "explode": false
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "company",
            "description": "Represents a company in Dynamics 365 Business Central"
        },
        {
            "name": "item",
            "description": "Represents a item in Dynamics 365 Business Central"
        },
        {
            "name": "picture",
            "description": "Represents a picture in Dynamics 365 Business Central"
        },
        {
            "name": "defaultDimensions",
            "description": "Represents a defaultDimensions in Dynamics 365 Business Central"
        },
        {
            "name": "customer",
            "description": "Represents a customer in Dynamics 365 Business Central"
        },
        {
            "name": "customerFinancialDetail",
            "description": "Represents a customerFinancialDetail in Dynamics 365 Business Central"
        },
        {
            "name": "vendor",
            "description": "Represents a vendor in Dynamics 365 Business Central"
        },
        {
            "name": "companyInformation",
            "description": "Represents a companyInformation in Dynamics 365 Business Central"
        },
        {
            "name": "salesInvoice",
            "description": "Represents a salesInvoice in Dynamics 365 Business Central"
        },
        {
            "name": "salesInvoiceLine",
            "description": "Represents a salesInvoiceLine in Dynamics 365 Business Central"
        },
        {
            "name": "pdfDocument",
            "description": "Represents a pdfDocument in Dynamics 365 Business Central"
        },
        {
            "name": "customerPaymentJournal",
            "description": "Represents a customerPaymentJournal in Dynamics 365 Business Central"
        },
        {
            "name": "customerPayment",
            "description": "Represents a customerPayment in Dynamics 365 Business Central"
        },
        {
            "name": "account",
            "description": "Represents a account in Dynamics 365 Business Central"
        },
        {
            "name": "taxGroup",
            "description": "Represents a taxGroup in Dynamics 365 Business Central"
        },
        {
            "name": "journal",
            "description": "Represents a journal in Dynamics 365 Business Central"
        },
        {
            "name": "journalLine",
            "description": "Represents a journalLine in Dynamics 365 Business Central"
        },
        {
            "name": "attachments",
            "description": "Represents a attachments in Dynamics 365 Business Central"
        },
        {
            "name": "employee",
            "description": "Represents a employee in Dynamics 365 Business Central"
        },
        {
            "name": "timeRegistrationEntry",
            "description": "Represents a timeRegistrationEntry in Dynamics 365 Business Central"
        },
        {
            "name": "generalLedgerEntry",
            "description": "Represents a generalLedgerEntry in Dynamics 365 Business Central"
        },
        {
            "name": "currency",
            "description": "Represents a currency in Dynamics 365 Business Central"
        },
        {
            "name": "paymentMethod",
            "description": "Represents a paymentMethod in Dynamics 365 Business Central"
        },
        {
            "name": "dimension",
            "description": "Represents a dimension in Dynamics 365 Business Central"
        },
        {
            "name": "dimensionValue",
            "description": "Represents a dimensionValue in Dynamics 365 Business Central"
        },
        {
            "name": "dimensionLine",
            "description": "Represents a dimensionLine in Dynamics 365 Business Central"
        },
        {
            "name": "paymentTerm",
            "description": "Represents a paymentTerm in Dynamics 365 Business Central"
        },
        {
            "name": "shipmentMethod",
            "description": "Represents a shipmentMethod in Dynamics 365 Business Central"
        },
        {
            "name": "itemCategory",
            "description": "Represents a itemCategory in Dynamics 365 Business Central"
        },
        {
            "name": "cashFlowStatement",
            "description": "Represents a cashFlowStatement in Dynamics 365 Business Central"
        },
        {
            "name": "countryRegion",
            "description": "Represents a countryRegion in Dynamics 365 Business Central"
        },
        {
            "name": "salesOrder",
            "description": "Represents a salesOrder in Dynamics 365 Business Central"
        },
        {
            "name": "salesOrderLine",
            "description": "Represents a salesOrderLine in Dynamics 365 Business Central"
        },
        {
            "name": "retainedEarningsStatement",
            "description": "Represents a retainedEarningsStatement in Dynamics 365 Business Central"
        },
        {
            "name": "unitOfMeasure",
            "description": "Represents a unitOfMeasure in Dynamics 365 Business Central"
        },
        {
            "name": "agedAccountsReceivable",
            "description": "Represents a agedAccountsReceivable in Dynamics 365 Business Central"
        },
        {
            "name": "agedAccountsPayable",
            "description": "Represents a agedAccountsPayable in Dynamics 365 Business Central"
        },
        {
            "name": "balanceSheet",
            "description": "Represents a balanceSheet in Dynamics 365 Business Central"
        },
        {
            "name": "trialBalance",
            "description": "Represents a trialBalance in Dynamics 365 Business Central"
        },
        {
            "name": "incomeStatement",
            "description": "Represents a incomeStatement in Dynamics 365 Business Central"
        },
        {
            "name": "taxArea",
            "description": "Represents a taxArea in Dynamics 365 Business Central"
        },
        {
            "name": "salesQuote",
            "description": "Represents a salesQuote in Dynamics 365 Business Central"
        },
        {
            "name": "salesQuoteLine",
            "description": "Represents a salesQuoteLine in Dynamics 365 Business Central"
        },
        {
            "name": "salesCreditMemo",
            "description": "Represents a salesCreditMemo in Dynamics 365 Business Central"
        },
        {
            "name": "salesCreditMemoLine",
            "description": "Represents a salesCreditMemoLine in Dynamics 365 Business Central"
        },
        {
            "name": "generalLedgerEntryAttachments",
            "description": "Represents a generalLedgerEntryAttachments in Dynamics 365 Business Central"
        },
        {
            "name": "purchaseInvoice",
            "description": "Represents a purchaseInvoice in Dynamics 365 Business Central"
        },
        {
            "name": "purchaseInvoiceLine",
            "description": "Represents a purchaseInvoiceLine in Dynamics 365 Business Central"
        },
        {
            "name": "customerSale",
            "description": "Represents a customerSale in Dynamics 365 Business Central"
        },
        {
            "name": "vendorPurchase",
            "description": "Represents a vendorPurchase in Dynamics 365 Business Central"
        }
    ],
    "components": {
        "schemas": {
            "taxArea": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the taxArea entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the taxArea entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the taxArea entity",
                        "maxLength": 100
                    },
                    "taxType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxType property for the taxArea entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the taxArea entity"
                    }
                }
            },
            "paymentMethod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the paymentMethod entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the paymentMethod entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the paymentMethod entity",
                        "maxLength": 100
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the paymentMethod entity"
                    }
                }
            },
            "salesQuote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the salesQuote entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the salesQuote entity",
                        "maxLength": 20
                    },
                    "externalDocumentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The externalDocumentNumber property for the salesQuote entity",
                        "maxLength": 35
                    },
                    "documentDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The documentDate property for the salesQuote entity"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dueDate property for the salesQuote entity"
                    },
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The customerId property for the salesQuote entity"
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contactId property for the salesQuote entity",
                        "maxLength": 250
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerNumber property for the salesQuote entity",
                        "maxLength": 20
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerName property for the salesQuote entity",
                        "maxLength": 100
                    },
                    "billToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToName property for the salesQuote entity",
                        "maxLength": 100
                    },
                    "billToCustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The billToCustomerId property for the salesQuote entity"
                    },
                    "billToCustomerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToCustomerNumber property for the salesQuote entity",
                        "maxLength": 20
                    },
                    "shipToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToName property for the salesQuote entity",
                        "maxLength": 100
                    },
                    "shipToContact": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToContact property for the salesQuote entity",
                        "maxLength": 100
                    },
                    "sellingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "billingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "shippingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the salesQuote entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the salesQuote entity"
                    },
                    "paymentTermsId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentTermsId property for the salesQuote entity"
                    },
                    "shipmentMethodId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The shipmentMethodId property for the salesQuote entity"
                    },
                    "salesperson": {
                        "type": "string",
                        "nullable": true,
                        "description": "The salesperson property for the salesQuote entity",
                        "maxLength": 20
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesQuote entity"
                    },
                    "totalAmountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountExcludingTax property for the salesQuote entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesQuote entity"
                    },
                    "totalAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountIncludingTax property for the salesQuote entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the salesQuote entity"
                    },
                    "sentDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The sentDate property for the salesQuote entity"
                    },
                    "validUntilDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The validUntilDate property for the salesQuote entity"
                    },
                    "acceptedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The acceptedDate property for the salesQuote entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the salesQuote entity"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the salesQuote entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the salesQuote entity",
                        "maxLength": 80
                    },
                    "salesQuoteLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesQuoteLine"
                        }
                    },
                    "pdfDocument": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/pdfDocument"
                        }
                    },
                    "customer": {
                        "nullable": true,
                        "$ref": "#/components/schemas/customer"
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    },
                    "shipmentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/shipmentMethod"
                    }
                }
            },
            "salesQuoteLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": false,
                        "description": "The id property for the salesQuoteLine entity",
                        "maxLength": 50
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The documentId property for the salesQuoteLine entity"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The sequence property for the salesQuoteLine entity"
                    },
                    "itemId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The itemId property for the salesQuoteLine entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the salesQuoteLine entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the salesQuoteLine entity"
                    },
                    "lineDetails": {
                        "$ref": "#/components/schemas/documentlineobjectdetailstype",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the salesQuoteLine entity",
                        "maxLength": 100
                    },
                    "unitOfMeasureId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The unitOfMeasureId property for the salesQuoteLine entity"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitPrice property for the salesQuoteLine entity"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The quantity property for the salesQuoteLine entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesQuoteLine entity"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountPercent property for the salesQuoteLine entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity"
                    },
                    "amountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountExcludingTax property for the salesQuoteLine entity"
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxCode property for the salesQuoteLine entity",
                        "maxLength": 50
                    },
                    "taxPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The taxPercent property for the salesQuoteLine entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesQuoteLine entity"
                    },
                    "amountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountIncludingTax property for the salesQuoteLine entity"
                    },
                    "netAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmount property for the salesQuoteLine entity"
                    },
                    "netTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netTaxAmount property for the salesQuoteLine entity"
                    },
                    "netAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmountIncludingTax property for the salesQuoteLine entity"
                    },
                    "item": {
                        "nullable": true,
                        "$ref": "#/components/schemas/item"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "cashFlowStatement": {
                "type": "object",
                "properties": {
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": false,
                        "description": "The lineNumber property for the cashFlowStatement entity"
                    },
                    "display": {
                        "type": "string",
                        "nullable": true,
                        "description": "The display property for the cashFlowStatement entity",
                        "maxLength": 250
                    },
                    "netChange": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netChange property for the cashFlowStatement entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the cashFlowStatement entity",
                        "maxLength": 30
                    },
                    "indentation": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The indentation property for the cashFlowStatement entity"
                    },
                    "dateFilter": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter property for the cashFlowStatement entity"
                    }
                }
            },
            "unitofmeasuretype": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the unitofmeasuretype entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the unitofmeasuretype entity",
                        "maxLength": 50
                    },
                    "symbol": {
                        "type": "string",
                        "nullable": true,
                        "description": "The symbol property for the unitofmeasuretype entity",
                        "maxLength": 10
                    },
                    "unitConversion": {
                        "$ref": "#/components/schemas/itemunitofmeasureconversiontype",
                        "nullable": true
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "itemCategory": {
                        "nullable": true,
                        "$ref": "#/components/schemas/itemCategory"
                    }
                }
            },
            "salesOrder": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the salesOrder entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the salesOrder entity",
                        "maxLength": 20
                    },
                    "externalDocumentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The externalDocumentNumber property for the salesOrder entity",
                        "maxLength": 35
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The orderDate property for the salesOrder entity"
                    },
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The customerId property for the salesOrder entity"
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contactId property for the salesOrder entity",
                        "maxLength": 250
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerNumber property for the salesOrder entity",
                        "maxLength": 20
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerName property for the salesOrder entity",
                        "maxLength": 100
                    },
                    "billToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToName property for the salesOrder entity",
                        "maxLength": 100
                    },
                    "billToCustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The billToCustomerId property for the salesOrder entity"
                    },
                    "billToCustomerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToCustomerNumber property for the salesOrder entity",
                        "maxLength": 20
                    },
                    "shipToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToName property for the salesOrder entity",
                        "maxLength": 100
                    },
                    "shipToContact": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToContact property for the salesOrder entity",
                        "maxLength": 100
                    },
                    "sellingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "billingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "shippingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the salesOrder entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the salesOrder entity"
                    },
                    "pricesIncludeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The pricesIncludeTax property for the salesOrder entity"
                    },
                    "paymentTermsId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentTermsId property for the salesOrder entity"
                    },
                    "salesperson": {
                        "type": "string",
                        "nullable": true,
                        "description": "The salesperson property for the salesOrder entity",
                        "maxLength": 20
                    },
                    "partialShipping": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The partialShipping property for the salesOrder entity"
                    },
                    "requestedDeliveryDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The requestedDeliveryDate property for the salesOrder entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesOrder entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesOrder entity"
                    },
                    "totalAmountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountExcludingTax property for the salesOrder entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesOrder entity"
                    },
                    "totalAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountIncludingTax property for the salesOrder entity"
                    },
                    "fullyShipped": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The fullyShipped property for the salesOrder entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the salesOrder entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the salesOrder entity"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the salesOrder entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the salesOrder entity",
                        "maxLength": 80
                    },
                    "salesOrderLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesOrderLine"
                        }
                    },
                    "customer": {
                        "nullable": true,
                        "$ref": "#/components/schemas/customer"
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    }
                }
            },
            "attachments": {
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The parentId property for the attachments entity"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the attachments entity"
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fileName property for the attachments entity",
                        "maxLength": 250
                    },
                    "byteSize": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The byteSize property for the attachments entity"
                    },
                    "content": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true,
                        "description": "The content property for the attachments entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the attachments entity"
                    }
                }
            },
            "itemCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the itemCategory entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the itemCategory entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the itemCategory entity",
                        "maxLength": 100
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the itemCategory entity"
                    }
                }
            },
            "dimensionLine": {
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The parentId property for the dimensionLine entity"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the dimensionLine entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the dimensionLine entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the dimensionLine entity",
                        "maxLength": 30
                    },
                    "valueId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The valueId property for the dimensionLine entity"
                    },
                    "valueCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The valueCode property for the dimensionLine entity"
                    },
                    "valueDisplayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The valueDisplayName property for the dimensionLine entity",
                        "maxLength": 50
                    },
                    "dimension": {
                        "nullable": true,
                        "$ref": "#/components/schemas/dimension"
                    }
                }
            },
            "picture": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the picture entity"
                    },
                    "width": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The width property for the picture entity"
                    },
                    "height": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The height property for the picture entity"
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contentType property for the picture entity",
                        "maxLength": 100
                    },
                    "content": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true,
                        "description": "The content property for the picture entity"
                    }
                }
            },
            "salesInvoiceLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": false,
                        "description": "The id property for the salesInvoiceLine entity",
                        "maxLength": 50
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The documentId property for the salesInvoiceLine entity"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The sequence property for the salesInvoiceLine entity"
                    },
                    "itemId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The itemId property for the salesInvoiceLine entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the salesInvoiceLine entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the salesInvoiceLine entity"
                    },
                    "lineDetails": {
                        "$ref": "#/components/schemas/documentlineobjectdetailstype",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the salesInvoiceLine entity",
                        "maxLength": 100
                    },
                    "unitOfMeasureId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The unitOfMeasureId property for the salesInvoiceLine entity"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitPrice property for the salesInvoiceLine entity"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The quantity property for the salesInvoiceLine entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesInvoiceLine entity"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountPercent property for the salesInvoiceLine entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity"
                    },
                    "amountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountExcludingTax property for the salesInvoiceLine entity"
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxCode property for the salesInvoiceLine entity",
                        "maxLength": 50
                    },
                    "taxPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The taxPercent property for the salesInvoiceLine entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesInvoiceLine entity"
                    },
                    "amountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountIncludingTax property for the salesInvoiceLine entity"
                    },
                    "invoiceDiscountAllocation": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity"
                    },
                    "netAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmount property for the salesInvoiceLine entity"
                    },
                    "netTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netTaxAmount property for the salesInvoiceLine entity"
                    },
                    "netAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmountIncludingTax property for the salesInvoiceLine entity"
                    },
                    "shipmentDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The shipmentDate property for the salesInvoiceLine entity"
                    },
                    "item": {
                        "nullable": true,
                        "$ref": "#/components/schemas/item"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "customerFinancialDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the customerFinancialDetail entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the customerFinancialDetail entity",
                        "maxLength": 20
                    },
                    "balance": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The balance property for the customerFinancialDetail entity"
                    },
                    "totalSalesExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalSalesExcludingTax property for the customerFinancialDetail entity"
                    },
                    "overdueAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The overdueAmount property for the customerFinancialDetail entity"
                    }
                }
            },
            "salesCreditMemoLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": false,
                        "description": "The id property for the salesCreditMemoLine entity",
                        "maxLength": 50
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The documentId property for the salesCreditMemoLine entity"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The sequence property for the salesCreditMemoLine entity"
                    },
                    "itemId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The itemId property for the salesCreditMemoLine entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the salesCreditMemoLine entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the salesCreditMemoLine entity"
                    },
                    "lineDetails": {
                        "$ref": "#/components/schemas/documentlineobjectdetailstype",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the salesCreditMemoLine entity",
                        "maxLength": 100
                    },
                    "unitOfMeasureId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The unitOfMeasureId property for the salesCreditMemoLine entity"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitPrice property for the salesCreditMemoLine entity"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The quantity property for the salesCreditMemoLine entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesCreditMemoLine entity"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountPercent property for the salesCreditMemoLine entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity"
                    },
                    "amountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountExcludingTax property for the salesCreditMemoLine entity"
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxCode property for the salesCreditMemoLine entity",
                        "maxLength": 50
                    },
                    "taxPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The taxPercent property for the salesCreditMemoLine entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesCreditMemoLine entity"
                    },
                    "amountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountIncludingTax property for the salesCreditMemoLine entity"
                    },
                    "invoiceDiscountAllocation": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity"
                    },
                    "netAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmount property for the salesCreditMemoLine entity"
                    },
                    "netTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netTaxAmount property for the salesCreditMemoLine entity"
                    },
                    "netAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity"
                    },
                    "shipmentDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The shipmentDate property for the salesCreditMemoLine entity"
                    },
                    "item": {
                        "nullable": true,
                        "$ref": "#/components/schemas/item"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "pdfDocument": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the pdfDocument entity"
                    },
                    "content": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true,
                        "description": "The content property for the pdfDocument entity"
                    }
                }
            },
            "salesCreditMemo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the salesCreditMemo entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the salesCreditMemo entity",
                        "maxLength": 20
                    },
                    "externalDocumentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The externalDocumentNumber property for the salesCreditMemo entity",
                        "maxLength": 35
                    },
                    "creditMemoDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The creditMemoDate property for the salesCreditMemo entity"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dueDate property for the salesCreditMemo entity"
                    },
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The customerId property for the salesCreditMemo entity"
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contactId property for the salesCreditMemo entity",
                        "maxLength": 250
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerNumber property for the salesCreditMemo entity",
                        "maxLength": 20
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerName property for the salesCreditMemo entity",
                        "maxLength": 100
                    },
                    "billToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToName property for the salesCreditMemo entity",
                        "maxLength": 100
                    },
                    "billToCustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The billToCustomerId property for the salesCreditMemo entity"
                    },
                    "billToCustomerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToCustomerNumber property for the salesCreditMemo entity",
                        "maxLength": 20
                    },
                    "sellingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "billingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the salesCreditMemo entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the salesCreditMemo entity"
                    },
                    "paymentTermsId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentTermsId property for the salesCreditMemo entity"
                    },
                    "salesperson": {
                        "type": "string",
                        "nullable": true,
                        "description": "The salesperson property for the salesCreditMemo entity",
                        "maxLength": 20
                    },
                    "pricesIncludeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The pricesIncludeTax property for the salesCreditMemo entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesCreditMemo entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesCreditMemo entity"
                    },
                    "totalAmountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountExcludingTax property for the salesCreditMemo entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesCreditMemo entity"
                    },
                    "totalAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountIncludingTax property for the salesCreditMemo entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the salesCreditMemo entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the salesCreditMemo entity"
                    },
                    "invoiceId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The invoiceId property for the salesCreditMemo entity"
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The invoiceNumber property for the salesCreditMemo entity",
                        "maxLength": 20
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the salesCreditMemo entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the salesCreditMemo entity",
                        "maxLength": 80
                    },
                    "salesCreditMemoLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesCreditMemoLine"
                        }
                    },
                    "pdfDocument": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/pdfDocument"
                        }
                    },
                    "customer": {
                        "nullable": true,
                        "$ref": "#/components/schemas/customer"
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    }
                }
            },
            "vendorPurchase": {
                "type": "object",
                "properties": {
                    "vendorId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The vendorId property for the vendorPurchase entity"
                    },
                    "vendorNumber": {
                        "type": "string",
                        "nullable": false,
                        "description": "The vendorNumber property for the vendorPurchase entity",
                        "maxLength": 20
                    },
                    "name": {
                        "type": "string",
                        "nullable": false,
                        "description": "The name property for the vendorPurchase entity",
                        "maxLength": 100
                    },
                    "totalPurchaseAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalPurchaseAmount property for the vendorPurchase entity"
                    },
                    "dateFilter_FilterOnly": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter_FilterOnly property for the vendorPurchase entity"
                    }
                }
            },
            "incomeStatement": {
                "type": "object",
                "properties": {
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": false,
                        "description": "The lineNumber property for the incomeStatement entity"
                    },
                    "display": {
                        "type": "string",
                        "nullable": true,
                        "description": "The display property for the incomeStatement entity",
                        "maxLength": 250
                    },
                    "netChange": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netChange property for the incomeStatement entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the incomeStatement entity",
                        "maxLength": 30
                    },
                    "indentation": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The indentation property for the incomeStatement entity"
                    },
                    "dateFilter": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter property for the incomeStatement entity"
                    }
                }
            },
            "generalLedgerEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": false,
                        "description": "The id property for the generalLedgerEntry entity"
                    },
                    "postingDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The postingDate property for the generalLedgerEntry entity"
                    },
                    "documentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The documentNumber property for the generalLedgerEntry entity",
                        "maxLength": 20
                    },
                    "documentType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The documentType property for the generalLedgerEntry entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the generalLedgerEntry entity"
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The accountNumber property for the generalLedgerEntry entity",
                        "maxLength": 20
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the generalLedgerEntry entity",
                        "maxLength": 100
                    },
                    "debitAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The debitAmount property for the generalLedgerEntry entity"
                    },
                    "creditAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The creditAmount property for the generalLedgerEntry entity"
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dimensiontype",
                            "nullable": true
                        }
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the generalLedgerEntry entity"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "customerSale": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The customerId property for the customerSale entity"
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": false,
                        "description": "The customerNumber property for the customerSale entity",
                        "maxLength": 20
                    },
                    "name": {
                        "type": "string",
                        "nullable": false,
                        "description": "The name property for the customerSale entity",
                        "maxLength": 100
                    },
                    "totalSalesAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalSalesAmount property for the customerSale entity"
                    },
                    "dateFilter_FilterOnly": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter_FilterOnly property for the customerSale entity"
                    }
                }
            },
            "countryRegion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the countryRegion entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the countryRegion entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the countryRegion entity",
                        "maxLength": 50
                    },
                    "addressFormat": {
                        "type": "string",
                        "nullable": true,
                        "description": "The addressFormat property for the countryRegion entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the countryRegion entity"
                    }
                }
            },
            "purchaseInvoiceLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": false,
                        "description": "The id property for the purchaseInvoiceLine entity",
                        "maxLength": 50
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The documentId property for the purchaseInvoiceLine entity"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The sequence property for the purchaseInvoiceLine entity"
                    },
                    "itemId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The itemId property for the purchaseInvoiceLine entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the purchaseInvoiceLine entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the purchaseInvoiceLine entity"
                    },
                    "lineDetails": {
                        "$ref": "#/components/schemas/documentlineobjectdetailstype",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the purchaseInvoiceLine entity",
                        "maxLength": 100
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitCost property for the purchaseInvoiceLine entity"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The quantity property for the purchaseInvoiceLine entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the purchaseInvoiceLine entity"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountPercent property for the purchaseInvoiceLine entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity"
                    },
                    "amountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountExcludingTax property for the purchaseInvoiceLine entity"
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxCode property for the purchaseInvoiceLine entity",
                        "maxLength": 50
                    },
                    "taxPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The taxPercent property for the purchaseInvoiceLine entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the purchaseInvoiceLine entity"
                    },
                    "amountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountIncludingTax property for the purchaseInvoiceLine entity"
                    },
                    "invoiceDiscountAllocation": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity"
                    },
                    "netAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmount property for the purchaseInvoiceLine entity"
                    },
                    "netTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netTaxAmount property for the purchaseInvoiceLine entity"
                    },
                    "netAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity"
                    },
                    "expectedReceiptDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity"
                    },
                    "item": {
                        "nullable": true,
                        "$ref": "#/components/schemas/item"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "dimensionValue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the dimensionValue entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the dimensionValue entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the dimensionValue entity",
                        "maxLength": 50
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the dimensionValue entity"
                    }
                }
            },
            "vendor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the vendor entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the vendor entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the vendor entity",
                        "maxLength": 100
                    },
                    "address": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the vendor entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the vendor entity",
                        "maxLength": 80
                    },
                    "website": {
                        "type": "string",
                        "nullable": true,
                        "description": "The website property for the vendor entity",
                        "maxLength": 80
                    },
                    "taxRegistrationNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxRegistrationNumber property for the vendor entity",
                        "maxLength": 20
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the vendor entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the vendor entity"
                    },
                    "irs1099Code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The irs1099Code property for the vendor entity"
                    },
                    "paymentTermsId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentTermsId property for the vendor entity"
                    },
                    "paymentMethodId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentMethodId property for the vendor entity"
                    },
                    "taxLiable": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The taxLiable property for the vendor entity"
                    },
                    "blocked": {
                        "type": "string",
                        "nullable": true,
                        "description": "The blocked property for the vendor entity"
                    },
                    "balance": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The balance property for the vendor entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the vendor entity"
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    },
                    "paymentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentMethod"
                    }
                }
            },
            "customer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the customer entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the customer entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the customer entity",
                        "maxLength": 100
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The type property for the customer entity"
                    },
                    "address": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the customer entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the customer entity",
                        "maxLength": 80
                    },
                    "website": {
                        "type": "string",
                        "nullable": true,
                        "description": "The website property for the customer entity",
                        "maxLength": 80
                    },
                    "taxLiable": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The taxLiable property for the customer entity"
                    },
                    "taxAreaId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The taxAreaId property for the customer entity"
                    },
                    "taxAreaDisplayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxAreaDisplayName property for the customer entity"
                    },
                    "taxRegistrationNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxRegistrationNumber property for the customer entity",
                        "maxLength": 20
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the customer entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the customer entity"
                    },
                    "paymentTermsId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentTermsId property for the customer entity"
                    },
                    "shipmentMethodId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The shipmentMethodId property for the customer entity"
                    },
                    "paymentMethodId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentMethodId property for the customer entity"
                    },
                    "blocked": {
                        "type": "string",
                        "nullable": true,
                        "description": "The blocked property for the customer entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the customer entity"
                    },
                    "customerFinancialDetails": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerFinancialDetail"
                        }
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    },
                    "shipmentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/shipmentMethod"
                    },
                    "paymentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentMethod"
                    }
                }
            },
            "item": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the item entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the item entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the item entity",
                        "maxLength": 100
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The type property for the item entity"
                    },
                    "itemCategoryId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The itemCategoryId property for the item entity"
                    },
                    "itemCategoryCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The itemCategoryCode property for the item entity",
                        "maxLength": 20
                    },
                    "blocked": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The blocked property for the item entity"
                    },
                    "baseUnitOfMeasureId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The baseUnitOfMeasureId property for the item entity"
                    },
                    "baseUnitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "gtin": {
                        "type": "string",
                        "nullable": true,
                        "description": "The gtin property for the item entity",
                        "maxLength": 14
                    },
                    "inventory": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The inventory property for the item entity"
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitPrice property for the item entity"
                    },
                    "priceIncludesTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The priceIncludesTax property for the item entity"
                    },
                    "unitCost": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitCost property for the item entity"
                    },
                    "taxGroupId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The taxGroupId property for the item entity"
                    },
                    "taxGroupCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxGroupCode property for the item entity",
                        "maxLength": 20
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the item entity"
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "itemCategory": {
                        "nullable": true,
                        "$ref": "#/components/schemas/itemCategory"
                    }
                }
            },
            "journal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the journal entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the journal entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the journal entity",
                        "maxLength": 100
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the journal entity"
                    },
                    "balancingAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The balancingAccountId property for the journal entity"
                    },
                    "balancingAccountNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The balancingAccountNumber property for the journal entity",
                        "maxLength": 20
                    },
                    "journalLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/journalLine"
                        }
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the account entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the account entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the account entity",
                        "maxLength": 100
                    },
                    "category": {
                        "type": "string",
                        "nullable": true,
                        "description": "The category property for the account entity"
                    },
                    "subCategory": {
                        "type": "string",
                        "nullable": true,
                        "description": "The subCategory property for the account entity",
                        "maxLength": 80
                    },
                    "blocked": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The blocked property for the account entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the account entity"
                    }
                }
            },
            "retainedEarningsStatement": {
                "type": "object",
                "properties": {
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": false,
                        "description": "The lineNumber property for the retainedEarningsStatement entity"
                    },
                    "display": {
                        "type": "string",
                        "nullable": true,
                        "description": "The display property for the retainedEarningsStatement entity",
                        "maxLength": 250
                    },
                    "netChange": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netChange property for the retainedEarningsStatement entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the retainedEarningsStatement entity",
                        "maxLength": 30
                    },
                    "indentation": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The indentation property for the retainedEarningsStatement entity"
                    },
                    "dateFilter": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter property for the retainedEarningsStatement entity"
                    }
                }
            },
            "purchaseInvoice": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the purchaseInvoice entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the purchaseInvoice entity",
                        "maxLength": 20
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoiceDate property for the purchaseInvoice entity"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dueDate property for the purchaseInvoice entity"
                    },
                    "vendorInvoiceNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The vendorInvoiceNumber property for the purchaseInvoice entity",
                        "maxLength": 35
                    },
                    "vendorId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The vendorId property for the purchaseInvoice entity"
                    },
                    "vendorNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The vendorNumber property for the purchaseInvoice entity",
                        "maxLength": 20
                    },
                    "vendorName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The vendorName property for the purchaseInvoice entity",
                        "maxLength": 100
                    },
                    "payToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The payToName property for the purchaseInvoice entity",
                        "maxLength": 100
                    },
                    "payToContact": {
                        "type": "string",
                        "nullable": true,
                        "description": "The payToContact property for the purchaseInvoice entity",
                        "maxLength": 100
                    },
                    "payToVendorId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The payToVendorId property for the purchaseInvoice entity"
                    },
                    "payToVendorNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The payToVendorNumber property for the purchaseInvoice entity",
                        "maxLength": 20
                    },
                    "shipToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToName property for the purchaseInvoice entity",
                        "maxLength": 100
                    },
                    "shipToContact": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToContact property for the purchaseInvoice entity",
                        "maxLength": 100
                    },
                    "buyFromAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "payToAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "shipToAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the purchaseInvoice entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the purchaseInvoice entity"
                    },
                    "pricesIncludeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The pricesIncludeTax property for the purchaseInvoice entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the purchaseInvoice entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the purchaseInvoice entity"
                    },
                    "totalAmountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountExcludingTax property for the purchaseInvoice entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the purchaseInvoice entity"
                    },
                    "totalAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountIncludingTax property for the purchaseInvoice entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the purchaseInvoice entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the purchaseInvoice entity"
                    },
                    "purchaseInvoiceLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/purchaseInvoiceLine"
                        }
                    },
                    "pdfDocument": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/pdfDocument"
                        }
                    },
                    "vendor": {
                        "nullable": true,
                        "$ref": "#/components/schemas/vendor"
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    }
                }
            },
            "dimension": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the dimension entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the dimension entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the dimension entity",
                        "maxLength": 30
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the dimension entity"
                    },
                    "dimensionValues": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/dimensionValue"
                        }
                    }
                }
            },
            "salesOrderLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": false,
                        "description": "The id property for the salesOrderLine entity",
                        "maxLength": 50
                    },
                    "documentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The documentId property for the salesOrderLine entity"
                    },
                    "sequence": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The sequence property for the salesOrderLine entity"
                    },
                    "itemId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The itemId property for the salesOrderLine entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the salesOrderLine entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the salesOrderLine entity"
                    },
                    "lineDetails": {
                        "$ref": "#/components/schemas/documentlineobjectdetailstype",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the salesOrderLine entity",
                        "maxLength": 100
                    },
                    "unitOfMeasureId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The unitOfMeasureId property for the salesOrderLine entity"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The quantity property for the salesOrderLine entity"
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The unitPrice property for the salesOrderLine entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesOrderLine entity"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountPercent property for the salesOrderLine entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesOrderLine entity"
                    },
                    "amountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountExcludingTax property for the salesOrderLine entity"
                    },
                    "taxCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxCode property for the salesOrderLine entity",
                        "maxLength": 50
                    },
                    "taxPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The taxPercent property for the salesOrderLine entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesOrderLine entity"
                    },
                    "amountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountIncludingTax property for the salesOrderLine entity"
                    },
                    "invoiceDiscountAllocation": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The invoiceDiscountAllocation property for the salesOrderLine entity"
                    },
                    "netAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmount property for the salesOrderLine entity"
                    },
                    "netTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netTaxAmount property for the salesOrderLine entity"
                    },
                    "netAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The netAmountIncludingTax property for the salesOrderLine entity"
                    },
                    "shipmentDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The shipmentDate property for the salesOrderLine entity"
                    },
                    "shippedQuantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The shippedQuantity property for the salesOrderLine entity"
                    },
                    "invoicedQuantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The invoicedQuantity property for the salesOrderLine entity"
                    },
                    "invoiceQuantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The invoiceQuantity property for the salesOrderLine entity"
                    },
                    "shipQuantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The shipQuantity property for the salesOrderLine entity"
                    },
                    "item": {
                        "nullable": true,
                        "$ref": "#/components/schemas/item"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "timeRegistrationEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the timeRegistrationEntry entity"
                    },
                    "employeeId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The employeeId property for the timeRegistrationEntry entity"
                    },
                    "employeeNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The employeeNumber property for the timeRegistrationEntry entity",
                        "maxLength": 20
                    },
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The lineNumber property for the timeRegistrationEntry entity"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date property for the timeRegistrationEntry entity"
                    },
                    "quantity": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The quantity property for the timeRegistrationEntry entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the timeRegistrationEntry entity"
                    },
                    "unitOfMeasureId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The unitOfMeasureId property for the timeRegistrationEntry entity"
                    },
                    "unitOfMeasure": {
                        "$ref": "#/components/schemas/unitofmeasuretype",
                        "nullable": true
                    },
                    "lastModfiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity"
                    }
                }
            },
            "paymentTerm": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the paymentTerm entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the paymentTerm entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the paymentTerm entity",
                        "maxLength": 100
                    },
                    "dueDateCalculation": {
                        "type": "string",
                        "nullable": true,
                        "description": "The dueDateCalculation property for the paymentTerm entity"
                    },
                    "discountDateCalculation": {
                        "type": "string",
                        "nullable": true,
                        "description": "The discountDateCalculation property for the paymentTerm entity"
                    },
                    "discountPercent": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountPercent property for the paymentTerm entity"
                    },
                    "calculateDiscountOnCreditMemos": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The calculateDiscountOnCreditMemos property for the paymentTerm entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the paymentTerm entity"
                    }
                }
            },
            "customerPayment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the customerPayment entity"
                    },
                    "journalDisplayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The journalDisplayName property for the customerPayment entity"
                    },
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The lineNumber property for the customerPayment entity"
                    },
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The customerId property for the customerPayment entity"
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerNumber property for the customerPayment entity",
                        "maxLength": 20
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contactId property for the customerPayment entity",
                        "maxLength": 250
                    },
                    "postingDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The postingDate property for the customerPayment entity"
                    },
                    "documentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The documentNumber property for the customerPayment entity",
                        "maxLength": 20
                    },
                    "externalDocumentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The externalDocumentNumber property for the customerPayment entity",
                        "maxLength": 35
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amount property for the customerPayment entity"
                    },
                    "appliesToInvoiceId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The appliesToInvoiceId property for the customerPayment entity"
                    },
                    "appliesToInvoiceNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The appliesToInvoiceNumber property for the customerPayment entity"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the customerPayment entity",
                        "maxLength": 100
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true,
                        "description": "The comment property for the customerPayment entity",
                        "maxLength": 250
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dimensiontype",
                            "nullable": true
                        }
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the customerPayment entity"
                    },
                    "customer": {
                        "nullable": true,
                        "$ref": "#/components/schemas/customer"
                    }
                }
            },
            "trialBalance": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "nullable": false,
                        "description": "The number property for the trialBalance entity",
                        "maxLength": 20
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the trialBalance entity"
                    },
                    "accountType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The accountType property for the trialBalance entity"
                    },
                    "display": {
                        "type": "string",
                        "nullable": true,
                        "description": "The display property for the trialBalance entity",
                        "maxLength": 100
                    },
                    "totalDebit": {
                        "type": "string",
                        "nullable": true,
                        "description": "The totalDebit property for the trialBalance entity",
                        "maxLength": 30
                    },
                    "totalCredit": {
                        "type": "string",
                        "nullable": true,
                        "description": "The totalCredit property for the trialBalance entity",
                        "maxLength": 30
                    },
                    "balanceAtDateDebit": {
                        "type": "string",
                        "nullable": true,
                        "description": "The balanceAtDateDebit property for the trialBalance entity",
                        "maxLength": 30
                    },
                    "balanceAtDateCredit": {
                        "type": "string",
                        "nullable": true,
                        "description": "The balanceAtDateCredit property for the trialBalance entity",
                        "maxLength": 30
                    },
                    "dateFilter": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter property for the trialBalance entity"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "agedAccountsPayable": {
                "type": "object",
                "properties": {
                    "vendorId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The vendorId property for the agedAccountsPayable entity"
                    },
                    "vendorNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The vendorNumber property for the agedAccountsPayable entity",
                        "maxLength": 20
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name property for the agedAccountsPayable entity",
                        "maxLength": 100
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the agedAccountsPayable entity",
                        "maxLength": 10
                    },
                    "balanceDue": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The balanceDue property for the agedAccountsPayable entity"
                    },
                    "currentAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The currentAmount property for the agedAccountsPayable entity"
                    },
                    "period1Amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The period1Amount property for the agedAccountsPayable entity"
                    },
                    "period2Amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The period2Amount property for the agedAccountsPayable entity"
                    },
                    "period3Amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The period3Amount property for the agedAccountsPayable entity"
                    },
                    "agedAsOfDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The agedAsOfDate property for the agedAccountsPayable entity"
                    },
                    "periodLengthFilter": {
                        "type": "string",
                        "nullable": true,
                        "description": "The periodLengthFilter property for the agedAccountsPayable entity",
                        "maxLength": 10
                    }
                }
            },
            "customerPaymentJournal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the customerPaymentJournal entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the customerPaymentJournal entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the customerPaymentJournal entity",
                        "maxLength": 100
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the customerPaymentJournal entity"
                    },
                    "balancingAccountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The balancingAccountId property for the customerPaymentJournal entity"
                    },
                    "balancingAccountNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The balancingAccountNumber property for the customerPaymentJournal entity",
                        "maxLength": 20
                    },
                    "customerPayments": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerPayment"
                        }
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "journalLine": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the journalLine entity"
                    },
                    "journalDisplayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The journalDisplayName property for the journalLine entity"
                    },
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The lineNumber property for the journalLine entity"
                    },
                    "accountId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accountId property for the journalLine entity"
                    },
                    "accountNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The accountNumber property for the journalLine entity",
                        "maxLength": 20
                    },
                    "postingDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The postingDate property for the journalLine entity"
                    },
                    "documentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The documentNumber property for the journalLine entity",
                        "maxLength": 20
                    },
                    "externalDocumentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The externalDocumentNumber property for the journalLine entity",
                        "maxLength": 35
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amount property for the journalLine entity"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description property for the journalLine entity",
                        "maxLength": 100
                    },
                    "comment": {
                        "type": "string",
                        "nullable": true,
                        "description": "The comment property for the journalLine entity",
                        "maxLength": 250
                    },
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/dimensiontype",
                            "nullable": true
                        }
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the journalLine entity"
                    },
                    "attachments": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/attachments"
                        }
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "documentlineobjectdetailstype": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the documentlineobjectdetailstype entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the documentlineobjectdetailstype entity",
                        "maxLength": 100
                    },
                    "item": {
                        "nullable": true,
                        "$ref": "#/components/schemas/item"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    }
                }
            },
            "itemunitofmeasureconversiontype": {
                "type": "object",
                "properties": {
                    "toUnitOfMeasure": {
                        "type": "string",
                        "nullable": true,
                        "description": "The toUnitOfMeasure property for the itemunitofmeasureconversiontype entity",
                        "maxLength": 10
                    },
                    "fromToConversionRate": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The fromToConversionRate property for the itemunitofmeasureconversiontype entity"
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "itemCategory": {
                        "nullable": true,
                        "$ref": "#/components/schemas/itemCategory"
                    }
                }
            },
            "postaladdresstype": {
                "type": "object",
                "properties": {
                    "street": {
                        "type": "string",
                        "nullable": true,
                        "description": "The street property for the postaladdresstype entity",
                        "maxLength": 152
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "description": "The city property for the postaladdresstype entity",
                        "maxLength": 30
                    },
                    "state": {
                        "type": "string",
                        "nullable": true,
                        "description": "The state property for the postaladdresstype entity",
                        "maxLength": 30
                    },
                    "countryLetterCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The countryLetterCode property for the postaladdresstype entity",
                        "maxLength": 10
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The postalCode property for the postaladdresstype entity",
                        "maxLength": 20
                    },
                    "customerFinancialDetails": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerFinancialDetail"
                        }
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    },
                    "shipmentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/shipmentMethod"
                    },
                    "paymentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentMethod"
                    }
                }
            },
            "salesInvoice": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the salesInvoice entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the salesInvoice entity",
                        "maxLength": 20
                    },
                    "externalDocumentNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The externalDocumentNumber property for the salesInvoice entity",
                        "maxLength": 35
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoiceDate property for the salesInvoice entity"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dueDate property for the salesInvoice entity"
                    },
                    "customerPurchaseOrderReference": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerPurchaseOrderReference property for the salesInvoice entity",
                        "maxLength": 35
                    },
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The customerId property for the salesInvoice entity"
                    },
                    "contactId": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contactId property for the salesInvoice entity",
                        "maxLength": 250
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerNumber property for the salesInvoice entity",
                        "maxLength": 20
                    },
                    "customerName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerName property for the salesInvoice entity",
                        "maxLength": 100
                    },
                    "billToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToName property for the salesInvoice entity",
                        "maxLength": 100
                    },
                    "billToCustomerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The billToCustomerId property for the salesInvoice entity"
                    },
                    "billToCustomerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The billToCustomerNumber property for the salesInvoice entity",
                        "maxLength": 20
                    },
                    "shipToName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToName property for the salesInvoice entity",
                        "maxLength": 100
                    },
                    "shipToContact": {
                        "type": "string",
                        "nullable": true,
                        "description": "The shipToContact property for the salesInvoice entity",
                        "maxLength": 100
                    },
                    "sellingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "billingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "shippingPostalAddress": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "currencyId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The currencyId property for the salesInvoice entity"
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the salesInvoice entity"
                    },
                    "orderId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The orderId property for the salesInvoice entity"
                    },
                    "orderNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The orderNumber property for the salesInvoice entity",
                        "maxLength": 20
                    },
                    "paymentTermsId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The paymentTermsId property for the salesInvoice entity"
                    },
                    "shipmentMethodId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The shipmentMethodId property for the salesInvoice entity"
                    },
                    "salesperson": {
                        "type": "string",
                        "nullable": true,
                        "description": "The salesperson property for the salesInvoice entity",
                        "maxLength": 20
                    },
                    "pricesIncludeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The pricesIncludeTax property for the salesInvoice entity"
                    },
                    "remainingAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The remainingAmount property for the salesInvoice entity"
                    },
                    "discountAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The discountAmount property for the salesInvoice entity"
                    },
                    "discountAppliedBeforeTax": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "The discountAppliedBeforeTax property for the salesInvoice entity"
                    },
                    "totalAmountExcludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountExcludingTax property for the salesInvoice entity"
                    },
                    "totalTaxAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalTaxAmount property for the salesInvoice entity"
                    },
                    "totalAmountIncludingTax": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The totalAmountIncludingTax property for the salesInvoice entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the salesInvoice entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the salesInvoice entity"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the salesInvoice entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the salesInvoice entity",
                        "maxLength": 80
                    },
                    "salesInvoiceLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesInvoiceLine"
                        }
                    },
                    "pdfDocument": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/pdfDocument"
                        }
                    },
                    "customer": {
                        "nullable": true,
                        "$ref": "#/components/schemas/customer"
                    },
                    "currency": {
                        "nullable": true,
                        "$ref": "#/components/schemas/currency"
                    },
                    "paymentTerm": {
                        "nullable": true,
                        "$ref": "#/components/schemas/paymentTerm"
                    },
                    "shipmentMethod": {
                        "nullable": true,
                        "$ref": "#/components/schemas/shipmentMethod"
                    }
                }
            },
            "generalLedgerEntryAttachments": {
                "type": "object",
                "properties": {
                    "generalLedgerEntryNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": false,
                        "description": "The generalLedgerEntryNumber property for the generalLedgerEntryAttachments entity"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the generalLedgerEntryAttachments entity"
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The fileName property for the generalLedgerEntryAttachments entity",
                        "maxLength": 250
                    },
                    "byteSize": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The byteSize property for the generalLedgerEntryAttachments entity"
                    },
                    "content": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true,
                        "description": "The content property for the generalLedgerEntryAttachments entity"
                    },
                    "createdDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The createdDateTime property for the generalLedgerEntryAttachments entity"
                    },
                    "generalLedgerEntry": {
                        "nullable": true,
                        "$ref": "#/components/schemas/generalLedgerEntry"
                    }
                }
            },
            "unitOfMeasure": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the unitOfMeasure entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the unitOfMeasure entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the unitOfMeasure entity",
                        "maxLength": 50
                    },
                    "internationalStandardCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The internationalStandardCode property for the unitOfMeasure entity",
                        "maxLength": 10
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the unitOfMeasure entity"
                    }
                }
            },
            "currency": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the currency entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the currency entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the currency entity",
                        "maxLength": 30
                    },
                    "symbol": {
                        "type": "string",
                        "nullable": true,
                        "description": "The symbol property for the currency entity",
                        "maxLength": 10
                    },
                    "amountDecimalPlaces": {
                        "type": "string",
                        "nullable": true,
                        "description": "The amountDecimalPlaces property for the currency entity",
                        "maxLength": 5
                    },
                    "amountRoundingPrecision": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The amountRoundingPrecision property for the currency entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the currency entity"
                    }
                }
            },
            "defaultDimensions": {
                "type": "object",
                "properties": {
                    "parentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The parentId property for the defaultDimensions entity"
                    },
                    "dimensionId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The dimensionId property for the defaultDimensions entity"
                    },
                    "dimensionCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The dimensionCode property for the defaultDimensions entity",
                        "maxLength": 20
                    },
                    "dimensionValueId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The dimensionValueId property for the defaultDimensions entity"
                    },
                    "dimensionValueCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The dimensionValueCode property for the defaultDimensions entity",
                        "maxLength": 20
                    },
                    "postingValidation": {
                        "type": "string",
                        "nullable": true,
                        "description": "The postingValidation property for the defaultDimensions entity"
                    },
                    "account": {
                        "nullable": true,
                        "$ref": "#/components/schemas/account"
                    },
                    "dimension": {
                        "nullable": true,
                        "$ref": "#/components/schemas/dimension"
                    },
                    "dimensionValue": {
                        "nullable": true,
                        "$ref": "#/components/schemas/dimensionValue"
                    }
                }
            },
            "company": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the company entity"
                    },
                    "systemVersion": {
                        "type": "string",
                        "nullable": true,
                        "description": "The systemVersion property for the company entity"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name property for the company entity",
                        "maxLength": 30
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the company entity",
                        "maxLength": 250
                    },
                    "businessProfileId": {
                        "type": "string",
                        "nullable": true,
                        "description": "The businessProfileId property for the company entity",
                        "maxLength": 250
                    },
                    "items": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/item"
                        }
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "customers": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customer"
                        }
                    },
                    "customerFinancialDetails": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerFinancialDetail"
                        }
                    },
                    "vendors": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/vendor"
                        }
                    },
                    "companyInformation": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/companyInformation"
                        }
                    },
                    "salesInvoices": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesInvoice"
                        }
                    },
                    "salesInvoiceLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesInvoiceLine"
                        }
                    },
                    "pdfDocument": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/pdfDocument"
                        }
                    },
                    "customerPaymentJournals": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerPaymentJournal"
                        }
                    },
                    "customerPayments": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerPayment"
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/account"
                        }
                    },
                    "taxGroups": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/taxGroup"
                        }
                    },
                    "journals": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/journal"
                        }
                    },
                    "journalLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/journalLine"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/attachments"
                        }
                    },
                    "employees": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/employee"
                        }
                    },
                    "timeRegistrationEntries": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/timeRegistrationEntry"
                        }
                    },
                    "generalLedgerEntries": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/generalLedgerEntry"
                        }
                    },
                    "currencies": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/currency"
                        }
                    },
                    "paymentMethods": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/paymentMethod"
                        }
                    },
                    "dimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/dimension"
                        }
                    },
                    "dimensionValues": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/dimensionValue"
                        }
                    },
                    "dimensionLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/dimensionLine"
                        }
                    },
                    "paymentTerms": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/paymentTerm"
                        }
                    },
                    "shipmentMethods": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/shipmentMethod"
                        }
                    },
                    "itemCategories": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/itemCategory"
                        }
                    },
                    "cashFlowStatement": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/cashFlowStatement"
                        }
                    },
                    "countriesRegions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/countryRegion"
                        }
                    },
                    "salesOrders": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesOrder"
                        }
                    },
                    "salesOrderLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesOrderLine"
                        }
                    },
                    "retainedEarningsStatement": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/retainedEarningsStatement"
                        }
                    },
                    "unitsOfMeasure": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/unitOfMeasure"
                        }
                    },
                    "agedAccountsReceivable": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/agedAccountsReceivable"
                        }
                    },
                    "agedAccountsPayable": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/agedAccountsPayable"
                        }
                    },
                    "balanceSheet": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/balanceSheet"
                        }
                    },
                    "trialBalance": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/trialBalance"
                        }
                    },
                    "incomeStatement": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/incomeStatement"
                        }
                    },
                    "taxAreas": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/taxArea"
                        }
                    },
                    "salesQuotes": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesQuote"
                        }
                    },
                    "salesQuoteLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesQuoteLine"
                        }
                    },
                    "salesCreditMemos": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesCreditMemo"
                        }
                    },
                    "salesCreditMemoLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/salesCreditMemoLine"
                        }
                    },
                    "generalLedgerEntryAttachments": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/generalLedgerEntryAttachments"
                        }
                    },
                    "purchaseInvoices": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/purchaseInvoice"
                        }
                    },
                    "purchaseInvoiceLines": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/purchaseInvoiceLine"
                        }
                    },
                    "customerSales": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/customerSale"
                        }
                    },
                    "vendorPurchases": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/vendorPurchase"
                        }
                    }
                }
            },
            "shipmentMethod": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the shipmentMethod entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the shipmentMethod entity",
                        "maxLength": 10
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the shipmentMethod entity",
                        "maxLength": 100
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the shipmentMethod entity"
                    }
                }
            },
            "balanceSheet": {
                "type": "object",
                "properties": {
                    "lineNumber": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": false,
                        "description": "The lineNumber property for the balanceSheet entity"
                    },
                    "display": {
                        "type": "string",
                        "nullable": true,
                        "description": "The display property for the balanceSheet entity",
                        "maxLength": 250
                    },
                    "balance": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The balance property for the balanceSheet entity"
                    },
                    "lineType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The lineType property for the balanceSheet entity",
                        "maxLength": 30
                    },
                    "indentation": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true,
                        "description": "The indentation property for the balanceSheet entity"
                    },
                    "dateFilter": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The dateFilter property for the balanceSheet entity"
                    }
                }
            },
            "dimensiontype": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": false,
                        "description": "The code property for the dimensiontype entity"
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the dimensiontype entity"
                    },
                    "valueCode": {
                        "type": "string",
                        "nullable": false,
                        "description": "The valueCode property for the dimensiontype entity"
                    },
                    "valueDisplayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The valueDisplayName property for the dimensiontype entity"
                    },
                    "customer": {
                        "nullable": true,
                        "$ref": "#/components/schemas/customer"
                    }
                }
            },
            "taxGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the taxGroup entity"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The code property for the taxGroup entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the taxGroup entity",
                        "maxLength": 100
                    },
                    "taxType": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxType property for the taxGroup entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the taxGroup entity"
                    }
                }
            },
            "employee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the employee entity"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The number property for the employee entity",
                        "maxLength": 20
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the employee entity"
                    },
                    "givenName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The givenName property for the employee entity",
                        "maxLength": 30
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The middleName property for the employee entity",
                        "maxLength": 30
                    },
                    "surname": {
                        "type": "string",
                        "nullable": true,
                        "description": "The surname property for the employee entity",
                        "maxLength": 30
                    },
                    "jobTitle": {
                        "type": "string",
                        "nullable": true,
                        "description": "The jobTitle property for the employee entity",
                        "maxLength": 30
                    },
                    "address": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the employee entity",
                        "maxLength": 30
                    },
                    "mobilePhone": {
                        "type": "string",
                        "nullable": true,
                        "description": "The mobilePhone property for the employee entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the employee entity",
                        "maxLength": 80
                    },
                    "personalEmail": {
                        "type": "string",
                        "nullable": true,
                        "description": "The personalEmail property for the employee entity",
                        "maxLength": 80
                    },
                    "employmentDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The employmentDate property for the employee entity"
                    },
                    "terminationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The terminationDate property for the employee entity"
                    },
                    "status": {
                        "type": "string",
                        "nullable": true,
                        "description": "The status property for the employee entity"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The birthDate property for the employee entity"
                    },
                    "statisticsGroupCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The statisticsGroupCode property for the employee entity",
                        "maxLength": 10
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the employee entity"
                    },
                    "picture": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/picture"
                        }
                    },
                    "defaultDimensions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/defaultDimensions"
                        }
                    },
                    "timeRegistrationEntries": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/timeRegistrationEntry"
                        }
                    }
                }
            },
            "agedAccountsReceivable": {
                "type": "object",
                "properties": {
                    "customerId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The customerId property for the agedAccountsReceivable entity"
                    },
                    "customerNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The customerNumber property for the agedAccountsReceivable entity",
                        "maxLength": 20
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name property for the agedAccountsReceivable entity",
                        "maxLength": 100
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the agedAccountsReceivable entity",
                        "maxLength": 10
                    },
                    "balanceDue": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The balanceDue property for the agedAccountsReceivable entity"
                    },
                    "currentAmount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The currentAmount property for the agedAccountsReceivable entity"
                    },
                    "period1Amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The period1Amount property for the agedAccountsReceivable entity"
                    },
                    "period2Amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The period2Amount property for the agedAccountsReceivable entity"
                    },
                    "period3Amount": {
                        "type": "number",
                        "format": "decimal",
                        "nullable": true,
                        "description": "The period3Amount property for the agedAccountsReceivable entity"
                    },
                    "agedAsOfDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The agedAsOfDate property for the agedAccountsReceivable entity"
                    },
                    "periodLengthFilter": {
                        "type": "string",
                        "nullable": true,
                        "description": "The periodLengthFilter property for the agedAccountsReceivable entity",
                        "maxLength": 10
                    }
                }
            },
            "companyInformation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "description": "The id property for the companyInformation entity"
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true,
                        "description": "The displayName property for the companyInformation entity",
                        "maxLength": 100
                    },
                    "address": {
                        "$ref": "#/components/schemas/postaladdresstype",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phoneNumber property for the companyInformation entity",
                        "maxLength": 30
                    },
                    "faxNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The faxNumber property for the companyInformation entity",
                        "maxLength": 30
                    },
                    "email": {
                        "type": "string",
                        "nullable": true,
                        "description": "The email property for the companyInformation entity",
                        "maxLength": 80
                    },
                    "website": {
                        "type": "string",
                        "nullable": true,
                        "description": "The website property for the companyInformation entity",
                        "maxLength": 80
                    },
                    "taxRegistrationNumber": {
                        "type": "string",
                        "nullable": true,
                        "description": "The taxRegistrationNumber property for the companyInformation entity",
                        "maxLength": 20
                    },
                    "currencyCode": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currencyCode property for the companyInformation entity"
                    },
                    "currentFiscalYearStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The currentFiscalYearStartDate property for the companyInformation entity"
                    },
                    "industry": {
                        "type": "string",
                        "nullable": true,
                        "description": "The industry property for the companyInformation entity",
                        "maxLength": 30
                    },
                    "picture": {
                        "type": "string",
                        "format": "binary",
                        "nullable": true,
                        "description": "The picture property for the companyInformation entity"
                    },
                    "lastModifiedDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The lastModifiedDateTime property for the companyInformation entity"
                    }
                }
            }
        },
        "requestBodies": {
            "taxArea": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the taxArea entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the taxArea entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the taxArea entity",
                                    "maxLength": 100
                                },
                                "taxType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxType property for the taxArea entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the taxArea entity"
                                }
                            }
                        }
                    }
                }
            },
            "paymentMethod": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the paymentMethod entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the paymentMethod entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the paymentMethod entity",
                                    "maxLength": 100
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the paymentMethod entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesQuote": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the salesQuote entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the salesQuote entity",
                                    "maxLength": 20
                                },
                                "externalDocumentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The externalDocumentNumber property for the salesQuote entity",
                                    "maxLength": 35
                                },
                                "documentDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The documentDate property for the salesQuote entity"
                                },
                                "dueDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The dueDate property for the salesQuote entity"
                                },
                                "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The customerId property for the salesQuote entity"
                                },
                                "contactId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The contactId property for the salesQuote entity",
                                    "maxLength": 250
                                },
                                "customerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerNumber property for the salesQuote entity",
                                    "maxLength": 20
                                },
                                "customerName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerName property for the salesQuote entity",
                                    "maxLength": 100
                                },
                                "billToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToName property for the salesQuote entity",
                                    "maxLength": 100
                                },
                                "billToCustomerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The billToCustomerId property for the salesQuote entity"
                                },
                                "billToCustomerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToCustomerNumber property for the salesQuote entity",
                                    "maxLength": 20
                                },
                                "shipToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToName property for the salesQuote entity",
                                    "maxLength": 100
                                },
                                "shipToContact": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToContact property for the salesQuote entity",
                                    "maxLength": 100
                                },
                                "sellingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "billingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "shippingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the salesQuote entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the salesQuote entity"
                                },
                                "paymentTermsId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentTermsId property for the salesQuote entity"
                                },
                                "shipmentMethodId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The shipmentMethodId property for the salesQuote entity"
                                },
                                "salesperson": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The salesperson property for the salesQuote entity",
                                    "maxLength": 20
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesQuote entity"
                                },
                                "totalAmountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountExcludingTax property for the salesQuote entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesQuote entity"
                                },
                                "totalAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountIncludingTax property for the salesQuote entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the salesQuote entity"
                                },
                                "sentDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The sentDate property for the salesQuote entity"
                                },
                                "validUntilDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The validUntilDate property for the salesQuote entity"
                                },
                                "acceptedDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The acceptedDate property for the salesQuote entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the salesQuote entity"
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the salesQuote entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the salesQuote entity",
                                    "maxLength": 80
                                }
                            }
                        }
                    }
                }
            },
            "salesQuoteLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "description": "The id property for the salesQuoteLine entity",
                                    "maxLength": 50
                                },
                                "documentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The documentId property for the salesQuoteLine entity"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The sequence property for the salesQuoteLine entity"
                                },
                                "itemId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The itemId property for the salesQuoteLine entity"
                                },
                                "accountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The accountId property for the salesQuoteLine entity"
                                },
                                "lineType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The lineType property for the salesQuoteLine entity"
                                },
                                "lineDetails": {
                                    "$ref": "#/components/schemas/documentlineobjectdetailstype",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the salesQuoteLine entity",
                                    "maxLength": 100
                                },
                                "unitOfMeasureId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The unitOfMeasureId property for the salesQuoteLine entity"
                                },
                                "unitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitPrice property for the salesQuoteLine entity"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The quantity property for the salesQuoteLine entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesQuoteLine entity"
                                },
                                "discountPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountPercent property for the salesQuoteLine entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity"
                                },
                                "amountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountExcludingTax property for the salesQuoteLine entity"
                                },
                                "taxCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxCode property for the salesQuoteLine entity",
                                    "maxLength": 50
                                },
                                "taxPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The taxPercent property for the salesQuoteLine entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesQuoteLine entity"
                                },
                                "amountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountIncludingTax property for the salesQuoteLine entity"
                                },
                                "netAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmount property for the salesQuoteLine entity"
                                },
                                "netTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netTaxAmount property for the salesQuoteLine entity"
                                },
                                "netAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmountIncludingTax property for the salesQuoteLine entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesOrder": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the salesOrder entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the salesOrder entity",
                                    "maxLength": 20
                                },
                                "externalDocumentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The externalDocumentNumber property for the salesOrder entity",
                                    "maxLength": 35
                                },
                                "orderDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The orderDate property for the salesOrder entity"
                                },
                                "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The customerId property for the salesOrder entity"
                                },
                                "contactId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The contactId property for the salesOrder entity",
                                    "maxLength": 250
                                },
                                "customerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerNumber property for the salesOrder entity",
                                    "maxLength": 20
                                },
                                "customerName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerName property for the salesOrder entity",
                                    "maxLength": 100
                                },
                                "billToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToName property for the salesOrder entity",
                                    "maxLength": 100
                                },
                                "billToCustomerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The billToCustomerId property for the salesOrder entity"
                                },
                                "billToCustomerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToCustomerNumber property for the salesOrder entity",
                                    "maxLength": 20
                                },
                                "shipToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToName property for the salesOrder entity",
                                    "maxLength": 100
                                },
                                "shipToContact": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToContact property for the salesOrder entity",
                                    "maxLength": 100
                                },
                                "sellingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "billingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "shippingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the salesOrder entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the salesOrder entity"
                                },
                                "pricesIncludeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The pricesIncludeTax property for the salesOrder entity"
                                },
                                "paymentTermsId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentTermsId property for the salesOrder entity"
                                },
                                "salesperson": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The salesperson property for the salesOrder entity",
                                    "maxLength": 20
                                },
                                "partialShipping": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The partialShipping property for the salesOrder entity"
                                },
                                "requestedDeliveryDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The requestedDeliveryDate property for the salesOrder entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesOrder entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesOrder entity"
                                },
                                "totalAmountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountExcludingTax property for the salesOrder entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesOrder entity"
                                },
                                "totalAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountIncludingTax property for the salesOrder entity"
                                },
                                "fullyShipped": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The fullyShipped property for the salesOrder entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the salesOrder entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the salesOrder entity"
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the salesOrder entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the salesOrder entity",
                                    "maxLength": 80
                                }
                            }
                        }
                    }
                }
            },
            "attachments": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "parentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The parentId property for the attachments entity"
                                },
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the attachments entity"
                                },
                                "fileName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The fileName property for the attachments entity",
                                    "maxLength": 250
                                },
                                "byteSize": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The byteSize property for the attachments entity"
                                },
                                "content": {
                                    "type": "string",
                                    "format": "binary",
                                    "nullable": true,
                                    "description": "The content property for the attachments entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the attachments entity"
                                }
                            }
                        }
                    }
                }
            },
            "itemCategory": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the itemCategory entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the itemCategory entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the itemCategory entity",
                                    "maxLength": 100
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the itemCategory entity"
                                }
                            }
                        }
                    }
                }
            },
            "dimensionLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "parentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The parentId property for the dimensionLine entity"
                                },
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the dimensionLine entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the dimensionLine entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the dimensionLine entity",
                                    "maxLength": 30
                                },
                                "valueId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The valueId property for the dimensionLine entity"
                                },
                                "valueCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The valueCode property for the dimensionLine entity"
                                },
                                "valueDisplayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The valueDisplayName property for the dimensionLine entity",
                                    "maxLength": 50
                                }
                            }
                        }
                    }
                }
            },
            "picture": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the picture entity"
                                },
                                "width": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The width property for the picture entity"
                                },
                                "height": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The height property for the picture entity"
                                },
                                "contentType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The contentType property for the picture entity",
                                    "maxLength": 100
                                },
                                "content": {
                                    "type": "string",
                                    "format": "binary",
                                    "nullable": true,
                                    "description": "The content property for the picture entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesInvoiceLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "description": "The id property for the salesInvoiceLine entity",
                                    "maxLength": 50
                                },
                                "documentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The documentId property for the salesInvoiceLine entity"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The sequence property for the salesInvoiceLine entity"
                                },
                                "itemId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The itemId property for the salesInvoiceLine entity"
                                },
                                "accountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The accountId property for the salesInvoiceLine entity"
                                },
                                "lineType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The lineType property for the salesInvoiceLine entity"
                                },
                                "lineDetails": {
                                    "$ref": "#/components/schemas/documentlineobjectdetailstype",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the salesInvoiceLine entity",
                                    "maxLength": 100
                                },
                                "unitOfMeasureId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The unitOfMeasureId property for the salesInvoiceLine entity"
                                },
                                "unitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitPrice property for the salesInvoiceLine entity"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The quantity property for the salesInvoiceLine entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesInvoiceLine entity"
                                },
                                "discountPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountPercent property for the salesInvoiceLine entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity"
                                },
                                "amountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountExcludingTax property for the salesInvoiceLine entity"
                                },
                                "taxCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxCode property for the salesInvoiceLine entity",
                                    "maxLength": 50
                                },
                                "taxPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The taxPercent property for the salesInvoiceLine entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesInvoiceLine entity"
                                },
                                "amountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountIncludingTax property for the salesInvoiceLine entity"
                                },
                                "invoiceDiscountAllocation": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity"
                                },
                                "netAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmount property for the salesInvoiceLine entity"
                                },
                                "netTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netTaxAmount property for the salesInvoiceLine entity"
                                },
                                "netAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmountIncludingTax property for the salesInvoiceLine entity"
                                },
                                "shipmentDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The shipmentDate property for the salesInvoiceLine entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesCreditMemoLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "description": "The id property for the salesCreditMemoLine entity",
                                    "maxLength": 50
                                },
                                "documentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The documentId property for the salesCreditMemoLine entity"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The sequence property for the salesCreditMemoLine entity"
                                },
                                "itemId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The itemId property for the salesCreditMemoLine entity"
                                },
                                "accountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The accountId property for the salesCreditMemoLine entity"
                                },
                                "lineType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The lineType property for the salesCreditMemoLine entity"
                                },
                                "lineDetails": {
                                    "$ref": "#/components/schemas/documentlineobjectdetailstype",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the salesCreditMemoLine entity",
                                    "maxLength": 100
                                },
                                "unitOfMeasureId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The unitOfMeasureId property for the salesCreditMemoLine entity"
                                },
                                "unitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitPrice property for the salesCreditMemoLine entity"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The quantity property for the salesCreditMemoLine entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesCreditMemoLine entity"
                                },
                                "discountPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountPercent property for the salesCreditMemoLine entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity"
                                },
                                "amountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountExcludingTax property for the salesCreditMemoLine entity"
                                },
                                "taxCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxCode property for the salesCreditMemoLine entity",
                                    "maxLength": 50
                                },
                                "taxPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The taxPercent property for the salesCreditMemoLine entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesCreditMemoLine entity"
                                },
                                "amountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountIncludingTax property for the salesCreditMemoLine entity"
                                },
                                "invoiceDiscountAllocation": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity"
                                },
                                "netAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmount property for the salesCreditMemoLine entity"
                                },
                                "netTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netTaxAmount property for the salesCreditMemoLine entity"
                                },
                                "netAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity"
                                },
                                "shipmentDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The shipmentDate property for the salesCreditMemoLine entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesCreditMemo": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the salesCreditMemo entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the salesCreditMemo entity",
                                    "maxLength": 20
                                },
                                "externalDocumentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The externalDocumentNumber property for the salesCreditMemo entity",
                                    "maxLength": 35
                                },
                                "creditMemoDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The creditMemoDate property for the salesCreditMemo entity"
                                },
                                "dueDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The dueDate property for the salesCreditMemo entity"
                                },
                                "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The customerId property for the salesCreditMemo entity"
                                },
                                "contactId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The contactId property for the salesCreditMemo entity",
                                    "maxLength": 250
                                },
                                "customerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerNumber property for the salesCreditMemo entity",
                                    "maxLength": 20
                                },
                                "customerName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerName property for the salesCreditMemo entity",
                                    "maxLength": 100
                                },
                                "billToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToName property for the salesCreditMemo entity",
                                    "maxLength": 100
                                },
                                "billToCustomerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The billToCustomerId property for the salesCreditMemo entity"
                                },
                                "billToCustomerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToCustomerNumber property for the salesCreditMemo entity",
                                    "maxLength": 20
                                },
                                "sellingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "billingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the salesCreditMemo entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the salesCreditMemo entity"
                                },
                                "paymentTermsId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentTermsId property for the salesCreditMemo entity"
                                },
                                "salesperson": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The salesperson property for the salesCreditMemo entity",
                                    "maxLength": 20
                                },
                                "pricesIncludeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The pricesIncludeTax property for the salesCreditMemo entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesCreditMemo entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesCreditMemo entity"
                                },
                                "totalAmountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountExcludingTax property for the salesCreditMemo entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesCreditMemo entity"
                                },
                                "totalAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountIncludingTax property for the salesCreditMemo entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the salesCreditMemo entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the salesCreditMemo entity"
                                },
                                "invoiceId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The invoiceId property for the salesCreditMemo entity"
                                },
                                "invoiceNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The invoiceNumber property for the salesCreditMemo entity",
                                    "maxLength": 20
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the salesCreditMemo entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the salesCreditMemo entity",
                                    "maxLength": 80
                                }
                            }
                        }
                    }
                }
            },
            "countryRegion": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the countryRegion entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the countryRegion entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the countryRegion entity",
                                    "maxLength": 50
                                },
                                "addressFormat": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The addressFormat property for the countryRegion entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the countryRegion entity"
                                }
                            }
                        }
                    }
                }
            },
            "purchaseInvoiceLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "description": "The id property for the purchaseInvoiceLine entity",
                                    "maxLength": 50
                                },
                                "documentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The documentId property for the purchaseInvoiceLine entity"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The sequence property for the purchaseInvoiceLine entity"
                                },
                                "itemId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The itemId property for the purchaseInvoiceLine entity"
                                },
                                "accountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The accountId property for the purchaseInvoiceLine entity"
                                },
                                "lineType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The lineType property for the purchaseInvoiceLine entity"
                                },
                                "lineDetails": {
                                    "$ref": "#/components/schemas/documentlineobjectdetailstype",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the purchaseInvoiceLine entity",
                                    "maxLength": 100
                                },
                                "unitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "unitCost": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitCost property for the purchaseInvoiceLine entity"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The quantity property for the purchaseInvoiceLine entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the purchaseInvoiceLine entity"
                                },
                                "discountPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountPercent property for the purchaseInvoiceLine entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity"
                                },
                                "amountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountExcludingTax property for the purchaseInvoiceLine entity"
                                },
                                "taxCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxCode property for the purchaseInvoiceLine entity",
                                    "maxLength": 50
                                },
                                "taxPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The taxPercent property for the purchaseInvoiceLine entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the purchaseInvoiceLine entity"
                                },
                                "amountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountIncludingTax property for the purchaseInvoiceLine entity"
                                },
                                "invoiceDiscountAllocation": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity"
                                },
                                "netAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmount property for the purchaseInvoiceLine entity"
                                },
                                "netTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netTaxAmount property for the purchaseInvoiceLine entity"
                                },
                                "netAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity"
                                },
                                "expectedReceiptDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity"
                                }
                            }
                        }
                    }
                }
            },
            "vendor": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the vendor entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the vendor entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the vendor entity",
                                    "maxLength": 100
                                },
                                "address": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the vendor entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the vendor entity",
                                    "maxLength": 80
                                },
                                "website": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The website property for the vendor entity",
                                    "maxLength": 80
                                },
                                "taxRegistrationNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxRegistrationNumber property for the vendor entity",
                                    "maxLength": 20
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the vendor entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the vendor entity"
                                },
                                "irs1099Code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The irs1099Code property for the vendor entity"
                                },
                                "paymentTermsId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentTermsId property for the vendor entity"
                                },
                                "paymentMethodId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentMethodId property for the vendor entity"
                                },
                                "taxLiable": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The taxLiable property for the vendor entity"
                                },
                                "blocked": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The blocked property for the vendor entity"
                                },
                                "balance": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The balance property for the vendor entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the vendor entity"
                                }
                            }
                        }
                    }
                }
            },
            "customer": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the customer entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the customer entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the customer entity",
                                    "maxLength": 100
                                },
                                "type": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The type property for the customer entity"
                                },
                                "address": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the customer entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the customer entity",
                                    "maxLength": 80
                                },
                                "website": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The website property for the customer entity",
                                    "maxLength": 80
                                },
                                "taxLiable": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The taxLiable property for the customer entity"
                                },
                                "taxAreaId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The taxAreaId property for the customer entity"
                                },
                                "taxAreaDisplayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxAreaDisplayName property for the customer entity"
                                },
                                "taxRegistrationNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxRegistrationNumber property for the customer entity",
                                    "maxLength": 20
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the customer entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the customer entity"
                                },
                                "paymentTermsId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentTermsId property for the customer entity"
                                },
                                "shipmentMethodId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The shipmentMethodId property for the customer entity"
                                },
                                "paymentMethodId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentMethodId property for the customer entity"
                                },
                                "blocked": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The blocked property for the customer entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the customer entity"
                                }
                            }
                        }
                    }
                }
            },
            "item": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the item entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the item entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the item entity",
                                    "maxLength": 100
                                },
                                "type": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The type property for the item entity"
                                },
                                "itemCategoryId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The itemCategoryId property for the item entity"
                                },
                                "itemCategoryCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The itemCategoryCode property for the item entity",
                                    "maxLength": 20
                                },
                                "blocked": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The blocked property for the item entity"
                                },
                                "baseUnitOfMeasureId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The baseUnitOfMeasureId property for the item entity"
                                },
                                "baseUnitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "gtin": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The gtin property for the item entity",
                                    "maxLength": 14
                                },
                                "inventory": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The inventory property for the item entity"
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitPrice property for the item entity"
                                },
                                "priceIncludesTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The priceIncludesTax property for the item entity"
                                },
                                "unitCost": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitCost property for the item entity"
                                },
                                "taxGroupId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The taxGroupId property for the item entity"
                                },
                                "taxGroupCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxGroupCode property for the item entity",
                                    "maxLength": 20
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the item entity"
                                }
                            }
                        }
                    }
                }
            },
            "journal": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the journal entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the journal entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the journal entity",
                                    "maxLength": 100
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the journal entity"
                                },
                                "balancingAccountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The balancingAccountId property for the journal entity"
                                },
                                "balancingAccountNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The balancingAccountNumber property for the journal entity",
                                    "maxLength": 20
                                }
                            }
                        }
                    }
                }
            },
            "purchaseInvoice": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the purchaseInvoice entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the purchaseInvoice entity",
                                    "maxLength": 20
                                },
                                "invoiceDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The invoiceDate property for the purchaseInvoice entity"
                                },
                                "dueDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The dueDate property for the purchaseInvoice entity"
                                },
                                "vendorInvoiceNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The vendorInvoiceNumber property for the purchaseInvoice entity",
                                    "maxLength": 35
                                },
                                "vendorId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The vendorId property for the purchaseInvoice entity"
                                },
                                "vendorNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The vendorNumber property for the purchaseInvoice entity",
                                    "maxLength": 20
                                },
                                "vendorName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The vendorName property for the purchaseInvoice entity",
                                    "maxLength": 100
                                },
                                "payToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The payToName property for the purchaseInvoice entity",
                                    "maxLength": 100
                                },
                                "payToContact": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The payToContact property for the purchaseInvoice entity",
                                    "maxLength": 100
                                },
                                "payToVendorId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The payToVendorId property for the purchaseInvoice entity"
                                },
                                "payToVendorNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The payToVendorNumber property for the purchaseInvoice entity",
                                    "maxLength": 20
                                },
                                "shipToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToName property for the purchaseInvoice entity",
                                    "maxLength": 100
                                },
                                "shipToContact": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToContact property for the purchaseInvoice entity",
                                    "maxLength": 100
                                },
                                "buyFromAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "payToAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "shipToAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the purchaseInvoice entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the purchaseInvoice entity"
                                },
                                "pricesIncludeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The pricesIncludeTax property for the purchaseInvoice entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the purchaseInvoice entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the purchaseInvoice entity"
                                },
                                "totalAmountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountExcludingTax property for the purchaseInvoice entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the purchaseInvoice entity"
                                },
                                "totalAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountIncludingTax property for the purchaseInvoice entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the purchaseInvoice entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the purchaseInvoice entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesOrderLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "description": "The id property for the salesOrderLine entity",
                                    "maxLength": 50
                                },
                                "documentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The documentId property for the salesOrderLine entity"
                                },
                                "sequence": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The sequence property for the salesOrderLine entity"
                                },
                                "itemId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The itemId property for the salesOrderLine entity"
                                },
                                "accountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The accountId property for the salesOrderLine entity"
                                },
                                "lineType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The lineType property for the salesOrderLine entity"
                                },
                                "lineDetails": {
                                    "$ref": "#/components/schemas/documentlineobjectdetailstype",
                                    "nullable": true
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the salesOrderLine entity",
                                    "maxLength": 100
                                },
                                "unitOfMeasureId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The unitOfMeasureId property for the salesOrderLine entity"
                                },
                                "unitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The quantity property for the salesOrderLine entity"
                                },
                                "unitPrice": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The unitPrice property for the salesOrderLine entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesOrderLine entity"
                                },
                                "discountPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountPercent property for the salesOrderLine entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesOrderLine entity"
                                },
                                "amountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountExcludingTax property for the salesOrderLine entity"
                                },
                                "taxCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxCode property for the salesOrderLine entity",
                                    "maxLength": 50
                                },
                                "taxPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The taxPercent property for the salesOrderLine entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesOrderLine entity"
                                },
                                "amountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountIncludingTax property for the salesOrderLine entity"
                                },
                                "invoiceDiscountAllocation": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The invoiceDiscountAllocation property for the salesOrderLine entity"
                                },
                                "netAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmount property for the salesOrderLine entity"
                                },
                                "netTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netTaxAmount property for the salesOrderLine entity"
                                },
                                "netAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The netAmountIncludingTax property for the salesOrderLine entity"
                                },
                                "shipmentDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The shipmentDate property for the salesOrderLine entity"
                                },
                                "shippedQuantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The shippedQuantity property for the salesOrderLine entity"
                                },
                                "invoicedQuantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The invoicedQuantity property for the salesOrderLine entity"
                                },
                                "invoiceQuantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The invoiceQuantity property for the salesOrderLine entity"
                                },
                                "shipQuantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The shipQuantity property for the salesOrderLine entity"
                                }
                            }
                        }
                    }
                }
            },
            "timeRegistrationEntry": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the timeRegistrationEntry entity"
                                },
                                "employeeId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The employeeId property for the timeRegistrationEntry entity"
                                },
                                "employeeNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The employeeNumber property for the timeRegistrationEntry entity",
                                    "maxLength": 20
                                },
                                "lineNumber": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The lineNumber property for the timeRegistrationEntry entity"
                                },
                                "date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The date property for the timeRegistrationEntry entity"
                                },
                                "quantity": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The quantity property for the timeRegistrationEntry entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the timeRegistrationEntry entity"
                                },
                                "unitOfMeasureId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The unitOfMeasureId property for the timeRegistrationEntry entity"
                                },
                                "unitOfMeasure": {
                                    "$ref": "#/components/schemas/unitofmeasuretype",
                                    "nullable": true
                                },
                                "lastModfiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity"
                                }
                            }
                        }
                    }
                }
            },
            "paymentTerm": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the paymentTerm entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the paymentTerm entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the paymentTerm entity",
                                    "maxLength": 100
                                },
                                "dueDateCalculation": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The dueDateCalculation property for the paymentTerm entity"
                                },
                                "discountDateCalculation": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The discountDateCalculation property for the paymentTerm entity"
                                },
                                "discountPercent": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountPercent property for the paymentTerm entity"
                                },
                                "calculateDiscountOnCreditMemos": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The calculateDiscountOnCreditMemos property for the paymentTerm entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the paymentTerm entity"
                                }
                            }
                        }
                    }
                }
            },
            "customerPayment": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the customerPayment entity"
                                },
                                "journalDisplayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The journalDisplayName property for the customerPayment entity"
                                },
                                "lineNumber": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The lineNumber property for the customerPayment entity"
                                },
                                "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The customerId property for the customerPayment entity"
                                },
                                "customerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerNumber property for the customerPayment entity",
                                    "maxLength": 20
                                },
                                "contactId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The contactId property for the customerPayment entity",
                                    "maxLength": 250
                                },
                                "postingDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The postingDate property for the customerPayment entity"
                                },
                                "documentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The documentNumber property for the customerPayment entity",
                                    "maxLength": 20
                                },
                                "externalDocumentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The externalDocumentNumber property for the customerPayment entity",
                                    "maxLength": 35
                                },
                                "amount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amount property for the customerPayment entity"
                                },
                                "appliesToInvoiceId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The appliesToInvoiceId property for the customerPayment entity"
                                },
                                "appliesToInvoiceNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The appliesToInvoiceNumber property for the customerPayment entity"
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the customerPayment entity",
                                    "maxLength": 100
                                },
                                "comment": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The comment property for the customerPayment entity",
                                    "maxLength": 250
                                },
                                "dimensions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/dimensiontype",
                                        "nullable": true
                                    }
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the customerPayment entity"
                                }
                            }
                        }
                    }
                }
            },
            "customerPaymentJournal": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the customerPaymentJournal entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the customerPaymentJournal entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the customerPaymentJournal entity",
                                    "maxLength": 100
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the customerPaymentJournal entity"
                                },
                                "balancingAccountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The balancingAccountId property for the customerPaymentJournal entity"
                                },
                                "balancingAccountNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The balancingAccountNumber property for the customerPaymentJournal entity",
                                    "maxLength": 20
                                }
                            }
                        }
                    }
                }
            },
            "journalLine": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the journalLine entity"
                                },
                                "journalDisplayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The journalDisplayName property for the journalLine entity"
                                },
                                "lineNumber": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The lineNumber property for the journalLine entity"
                                },
                                "accountId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The accountId property for the journalLine entity"
                                },
                                "accountNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The accountNumber property for the journalLine entity",
                                    "maxLength": 20
                                },
                                "postingDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The postingDate property for the journalLine entity"
                                },
                                "documentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The documentNumber property for the journalLine entity",
                                    "maxLength": 20
                                },
                                "externalDocumentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The externalDocumentNumber property for the journalLine entity",
                                    "maxLength": 35
                                },
                                "amount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amount property for the journalLine entity"
                                },
                                "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The description property for the journalLine entity",
                                    "maxLength": 100
                                },
                                "comment": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The comment property for the journalLine entity",
                                    "maxLength": 250
                                },
                                "dimensions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/dimensiontype",
                                        "nullable": true
                                    }
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the journalLine entity"
                                }
                            }
                        }
                    }
                }
            },
            "salesInvoice": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the salesInvoice entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the salesInvoice entity",
                                    "maxLength": 20
                                },
                                "externalDocumentNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The externalDocumentNumber property for the salesInvoice entity",
                                    "maxLength": 35
                                },
                                "invoiceDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The invoiceDate property for the salesInvoice entity"
                                },
                                "dueDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The dueDate property for the salesInvoice entity"
                                },
                                "customerPurchaseOrderReference": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerPurchaseOrderReference property for the salesInvoice entity",
                                    "maxLength": 35
                                },
                                "customerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The customerId property for the salesInvoice entity"
                                },
                                "contactId": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The contactId property for the salesInvoice entity",
                                    "maxLength": 250
                                },
                                "customerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerNumber property for the salesInvoice entity",
                                    "maxLength": 20
                                },
                                "customerName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The customerName property for the salesInvoice entity",
                                    "maxLength": 100
                                },
                                "billToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToName property for the salesInvoice entity",
                                    "maxLength": 100
                                },
                                "billToCustomerId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The billToCustomerId property for the salesInvoice entity"
                                },
                                "billToCustomerNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The billToCustomerNumber property for the salesInvoice entity",
                                    "maxLength": 20
                                },
                                "shipToName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToName property for the salesInvoice entity",
                                    "maxLength": 100
                                },
                                "shipToContact": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The shipToContact property for the salesInvoice entity",
                                    "maxLength": 100
                                },
                                "sellingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "billingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "shippingPostalAddress": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "currencyId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The currencyId property for the salesInvoice entity"
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the salesInvoice entity"
                                },
                                "orderId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The orderId property for the salesInvoice entity"
                                },
                                "orderNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The orderNumber property for the salesInvoice entity",
                                    "maxLength": 20
                                },
                                "paymentTermsId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The paymentTermsId property for the salesInvoice entity"
                                },
                                "shipmentMethodId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The shipmentMethodId property for the salesInvoice entity"
                                },
                                "salesperson": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The salesperson property for the salesInvoice entity",
                                    "maxLength": 20
                                },
                                "pricesIncludeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The pricesIncludeTax property for the salesInvoice entity"
                                },
                                "remainingAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The remainingAmount property for the salesInvoice entity"
                                },
                                "discountAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The discountAmount property for the salesInvoice entity"
                                },
                                "discountAppliedBeforeTax": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "The discountAppliedBeforeTax property for the salesInvoice entity"
                                },
                                "totalAmountExcludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountExcludingTax property for the salesInvoice entity"
                                },
                                "totalTaxAmount": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalTaxAmount property for the salesInvoice entity"
                                },
                                "totalAmountIncludingTax": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The totalAmountIncludingTax property for the salesInvoice entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the salesInvoice entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the salesInvoice entity"
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the salesInvoice entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the salesInvoice entity",
                                    "maxLength": 80
                                }
                            }
                        }
                    }
                }
            },
            "generalLedgerEntryAttachments": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "generalLedgerEntryNumber": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": false,
                                    "description": "The generalLedgerEntryNumber property for the generalLedgerEntryAttachments entity"
                                },
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the generalLedgerEntryAttachments entity"
                                },
                                "fileName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The fileName property for the generalLedgerEntryAttachments entity",
                                    "maxLength": 250
                                },
                                "byteSize": {
                                    "type": "integer",
                                    "format": "int32",
                                    "nullable": true,
                                    "description": "The byteSize property for the generalLedgerEntryAttachments entity"
                                },
                                "content": {
                                    "type": "string",
                                    "format": "binary",
                                    "nullable": true,
                                    "description": "The content property for the generalLedgerEntryAttachments entity"
                                },
                                "createdDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The createdDateTime property for the generalLedgerEntryAttachments entity"
                                }
                            }
                        }
                    }
                }
            },
            "unitOfMeasure": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the unitOfMeasure entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the unitOfMeasure entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the unitOfMeasure entity",
                                    "maxLength": 50
                                },
                                "internationalStandardCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The internationalStandardCode property for the unitOfMeasure entity",
                                    "maxLength": 10
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the unitOfMeasure entity"
                                }
                            }
                        }
                    }
                }
            },
            "currency": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the currency entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the currency entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the currency entity",
                                    "maxLength": 30
                                },
                                "symbol": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The symbol property for the currency entity",
                                    "maxLength": 10
                                },
                                "amountDecimalPlaces": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The amountDecimalPlaces property for the currency entity",
                                    "maxLength": 5
                                },
                                "amountRoundingPrecision": {
                                    "type": "number",
                                    "format": "decimal",
                                    "nullable": true,
                                    "description": "The amountRoundingPrecision property for the currency entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the currency entity"
                                }
                            }
                        }
                    }
                }
            },
            "defaultDimensions": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "parentId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The parentId property for the defaultDimensions entity"
                                },
                                "dimensionId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The dimensionId property for the defaultDimensions entity"
                                },
                                "dimensionCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The dimensionCode property for the defaultDimensions entity",
                                    "maxLength": 20
                                },
                                "dimensionValueId": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": true,
                                    "description": "The dimensionValueId property for the defaultDimensions entity"
                                },
                                "dimensionValueCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The dimensionValueCode property for the defaultDimensions entity",
                                    "maxLength": 20
                                },
                                "postingValidation": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The postingValidation property for the defaultDimensions entity"
                                }
                            }
                        }
                    }
                }
            },
            "shipmentMethod": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the shipmentMethod entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the shipmentMethod entity",
                                    "maxLength": 10
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the shipmentMethod entity",
                                    "maxLength": 100
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the shipmentMethod entity"
                                }
                            }
                        }
                    }
                }
            },
            "taxGroup": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the taxGroup entity"
                                },
                                "code": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The code property for the taxGroup entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the taxGroup entity",
                                    "maxLength": 100
                                },
                                "taxType": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxType property for the taxGroup entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the taxGroup entity"
                                }
                            }
                        }
                    }
                }
            },
            "employee": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the employee entity"
                                },
                                "number": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The number property for the employee entity",
                                    "maxLength": 20
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the employee entity"
                                },
                                "givenName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The givenName property for the employee entity",
                                    "maxLength": 30
                                },
                                "middleName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The middleName property for the employee entity",
                                    "maxLength": 30
                                },
                                "surname": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The surname property for the employee entity",
                                    "maxLength": 30
                                },
                                "jobTitle": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The jobTitle property for the employee entity",
                                    "maxLength": 30
                                },
                                "address": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the employee entity",
                                    "maxLength": 30
                                },
                                "mobilePhone": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The mobilePhone property for the employee entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the employee entity",
                                    "maxLength": 80
                                },
                                "personalEmail": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The personalEmail property for the employee entity",
                                    "maxLength": 80
                                },
                                "employmentDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The employmentDate property for the employee entity"
                                },
                                "terminationDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The terminationDate property for the employee entity"
                                },
                                "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The status property for the employee entity"
                                },
                                "birthDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The birthDate property for the employee entity"
                                },
                                "statisticsGroupCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The statisticsGroupCode property for the employee entity",
                                    "maxLength": 10
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the employee entity"
                                }
                            }
                        }
                    }
                }
            },
            "companyInformation": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "nullable": false,
                                    "description": "The id property for the companyInformation entity"
                                },
                                "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The displayName property for the companyInformation entity",
                                    "maxLength": 100
                                },
                                "address": {
                                    "$ref": "#/components/schemas/postaladdresstype",
                                    "nullable": true
                                },
                                "phoneNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The phoneNumber property for the companyInformation entity",
                                    "maxLength": 30
                                },
                                "faxNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The faxNumber property for the companyInformation entity",
                                    "maxLength": 30
                                },
                                "email": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The email property for the companyInformation entity",
                                    "maxLength": 80
                                },
                                "website": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The website property for the companyInformation entity",
                                    "maxLength": 80
                                },
                                "taxRegistrationNumber": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The taxRegistrationNumber property for the companyInformation entity",
                                    "maxLength": 20
                                },
                                "currencyCode": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The currencyCode property for the companyInformation entity"
                                },
                                "currentFiscalYearStartDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The currentFiscalYearStartDate property for the companyInformation entity"
                                },
                                "industry": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The industry property for the companyInformation entity",
                                    "maxLength": 30
                                },
                                "picture": {
                                    "type": "string",
                                    "format": "binary",
                                    "nullable": true,
                                    "description": "The picture property for the companyInformation entity"
                                },
                                "lastModifiedDateTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "description": "The lastModifiedDateTime property for the companyInformation entity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "filterParam": {
                "name": "$filter",
                "in": "query",
                "schema": {
                    "type": "string"
                },
                "description": "Filtering expression"
            },
            "topParam": {
                "name": "$top",
                "in": "query",
                "schema": {
                    "type": "integer"
                },
                "description": "Number of items to return from the top of the list"
            },
            "skipParam": {
                "name": "$skip",
                "in": "query",
                "schema": {
                    "type": "integer"
                },
                "description": "Number of items to skip from the list"
            },
            "limitParam": {
                "name": "$limit",
                "in": "query",
                "schema": {
                    "type": "integer"
                },
                "description": "Number of items to return from the list"
            },
            "IfMatchParam": {
                "name": "If-Match",
                "in": "header",
                "schema": {
                    "type": "string"
                },
                "required": true,
                "description": "Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated."
            }
        },
        "securitySchemes": {
            "oAuth": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://login.windows.net/common/oauth2/authorize?resource=https://api.businesscentral.dynamics.com",
                        "scopes": {
                            "Financials.ReadWrite.All": "financials.read.write.all"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "oAuth": [
                "Financials.ReadWrite.All"
            ]
        }
    ]
}